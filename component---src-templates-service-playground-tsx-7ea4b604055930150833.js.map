{"version":3,"file":"component---src-templates-service-playground-tsx-7ea4b604055930150833.js","mappings":"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uCAAoB;AAC7B;AACA,wBAAwB,yCAAsB;AAC9C,6DAAe,+DAAe;;;;ACNsE;AAC1C;AAC1D,MAAM,iBAAS;AACf;AACA;AACA;AACA;AACA;AAC+B;AACP;AACW;AACU;AACyB;AAC4B;AAC5D;AACc;AACQ;AACZ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,uBAAuB;AACtD;AACA,sBAAsB,uCAAS;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,uCAAS;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,0BAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,qBAAqB,4BAAO;AAC5B,sBAAsB,+BAAU;AAChC,SAAS,8BAAQ;AACjB;AACA;AACA,mEAAmE,kCAAK;AACxE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY,EAAE,WAAW,GAAG,wCAAwC,EAAE,WAAW;AACtG;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC;AACD;AACA,CAAC,yCAAyC,iCAAG;AAC7C,mBAAmB,GAAG;AACtB;AACA;AACA;AACA,CAAC,wCAAwC,iCAAG;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B,QAAQ,iBAAS;AAC1D,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AAC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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Category.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@mui/material/Divider/dividerClasses.js","webpack://jacdac-docs/./src/components/IDChip.tsx","webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecificationStatusAlert.tsx","webpack://jacdac-docs/./src/components/ui/Markdown.tsx","webpack://jacdac-docs/./src/jacdac/useEventCount.ts","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./node_modules/@mui/material/Skeleton/skeletonClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/Skeleton/Skeleton.js","webpack://jacdac-docs/./src/components/ui/CardMediaWithSkeleton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCard.tsx","webpack://jacdac-docs/./src/components/ui/AutoGrid.tsx","webpack://jacdac-docs/./src/components/ServiceRegisters.tsx","webpack://jacdac-docs/./src/components/EventInput.tsx","webpack://jacdac-docs/./src/components/ServiceEvents.tsx","webpack://jacdac-docs/./src/components/CommandInput.tsx","webpack://jacdac-docs/./src/components/DecodedPacketItem.tsx","webpack://jacdac-docs/./src/components/ServiceCard.tsx","webpack://jacdac-docs/./src/components/devices/DeviceList.tsx","webpack://jacdac-docs/./src/components/KindChip.tsx","webpack://jacdac-docs/./src/components/PacketMembersChip.tsx","webpack://jacdac-docs/./src/components/ui/Snippet.tsx","webpack://jacdac-docs/./src/components/specification/PacketSpecificationSource.tsx","webpack://jacdac-docs/./src/components/specification/PacketSpecification.tsx","webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/hooks/useServiceProviderFromServiceClass.ts","webpack://jacdac-docs/./src/components/specification/ServiceSpecification.tsx","webpack://jacdac-docs/./src/templates/service-playground.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import React, { useContext } from \"react\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FingerprintIcon from \"@mui/icons-material/Fingerprint\"\nimport { Chip, IconButton } from \"@mui/material\"\nimport PacketsContext from \"./PacketsContext\"\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function IDChip(props: {\n    id: number | string\n    className?: string\n    filter?: string\n}) {\n    const { id, className, filter } = props\n    const { filter: packetFilter, setFilter: setPacketFilter } =\n        useContext(PacketsContext)\n    const { setDrawerType } = useContext(AppContext)\n\n    const ids =\n        typeof id === \"string\"\n            ? id\n            : `0x${id !== undefined ? (id as number).toString(16) : \"???\"}`\n    const filtered = packetFilter && packetFilter.indexOf(filter) > -1\n    const handleFilterClick = () => {\n        if (filtered) setPacketFilter(packetFilter?.replace(filter, \"\")?.trim())\n        else setPacketFilter(packetFilter?.trim() + \" \" + filter)\n        setDrawerType(DrawerType.Packets)\n    }\n    const icon = <FingerprintIcon />\n    const title = filtered ? `remove filter ${filter}` : `add filter ${filter}`\n    if (filter)\n        return (\n            <Tooltip\n                title={\n                    filtered\n                        ? `remove filter ${filter}`\n                        : `add filter ${filter}`\n                }\n            >\n                <span>\n                    <Chip\n                        className={className}\n                        size=\"small\"\n                        icon={\n                            <IconButton\n                                aria-label={title}\n                                onClick={handleFilterClick}\n                                size=\"small\"\n                            >\n                                {icon}\n                            </IconButton>\n                        }\n                        label={ids}\n                    />\n                </span>\n            </Tooltip>\n        )\n    else\n        return (\n            <Chip\n                aria-label={title}\n                className={className}\n                size=\"small\"\n                icon={icon}\n                title={`identifier ${ids}`}\n                label={ids}\n            />\n        )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import { AlertTitle } from \"@mui/material\"\nimport React from \"react\"\nimport Alert from \"../ui/Alert\"\n\nexport function StatusAlert(props: { specification: jdspec.ServiceSpec }) {\n    const { specification } = props\n\n    switch (specification?.status) {\n        case \"deprecated\":\n            return (\n                <Alert severity=\"error\">\n                    <AlertTitle>Service deprecated</AlertTitle>\n                    This service should not be added to new modules and might\n                    not be supported in future releases.\n                </Alert>\n            )\n        case \"experimental\":\n            return (\n                <Alert severity=\"info\">\n                    <AlertTitle>Experimental service</AlertTitle>\n                    This service specification may change in the future.\n                </Alert>\n            )\n        default:\n            return null\n    }\n}\n\nconst ServiceSpecificationStatusAlert = React.memo(StatusAlert)\n\nexport default ServiceSpecificationStatusAlert\n","import React, { lazy } from \"react\"\nimport Suspense from \"./Suspense\"\nconst SuspensedMarkdown = lazy(() => import(\"./SuspensedMarkdown\"))\n\nexport default function Markdown(props: {\n    source: string\n    className?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    components?: Partial<any>\n}) {\n    return (\n        <Suspense>\n            <SuspensedMarkdown {...props} />\n        </Suspense>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { JDEvent } from \"../../jacdac-ts/src/jdom/event\"\nimport { CHANGE } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function useEventCount(event: JDEvent) {\n    const [count, setCount] = useState(event?.count || 0)\n    useEffect(\n        () =>\n            event?.subscribe(CHANGE, () => {\n                setCount(event.count)\n            }),\n        [event]\n    )\n\n    return count\n}\n","import { ButtonProps } from \"@mui/material\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import { CardMedia, CardMediaProps, Skeleton } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function CardMediaWithSkeleton(\n    props: { aspectRatio?: string | number; title: string } & CardMediaProps\n) {\n    const { image, src, aspectRatio = \"4 / 3\", title } = props\n    const hasImage = !!image || !!src\n    if (!hasImage) return <Skeleton sx={{ aspectRatio }} width=\"100%\" />\n\n    return (\n        <CardMedia\n            component=\"img\"\n            image={image}\n            src={src}\n            alt={title}\n            sx={{ aspectRatio }}\n        />\n    )\n}\n","import React from \"react\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification, \"preview\")\n\n    return (\n        <CardMediaWithSkeleton image={imageUrl} title={specification?.name} />\n    )\n}\n","import { CardHeader, Grid, Typography } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport React, { lazy } from \"react\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport DeviceAvatar from \"./DeviceAvatar\"\nimport useDeviceDescription from \"../../jacdac/useDeviceDescription\"\nimport Suspense from \"../ui/Suspense\"\nconst DeviceFirmwareVersionChip = lazy(\n    () => import(\"./DeviceFirmwareVersionChip\")\n)\nconst DeviceTemperatureChip = lazy(() => import(\"./DeviceTemperatureChip\"))\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n    showReset?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n        showReset,\n        showDescription,\n    } = props\n    const specification = useDeviceSpecification(device)\n    const description = useDeviceDescription(showDescription && device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showReset={showReset}\n                        showSettings={showSettings}\n                        hideIdentity={showAvatar}\n                    />\n                }\n                title={\n                    <DeviceName device={device} linkToSpecification={true} />\n                }\n                subheader={\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Typography variant=\"caption\" gutterBottom>\n                                {[\n                                    specification?.name,\n                                    showDeviceId && device.deviceId,\n                                    showDescription && description,\n                                ]\n                                    .filter(s => !!s)\n                                    .join(\", \")}\n                            </Typography>\n                        </Grid>\n\n                        {showFirmware && (\n                            <Grid item>\n                                <Suspense>\n                                    <DeviceFirmwareVersionChip\n                                        device={device}\n                                    />\n                                </Suspense>\n                            </Grid>\n                        )}\n                        {showTemperature && (\n                            <Grid item>\n                                <Suspense>\n                                    <DeviceTemperatureChip device={device} />\n                                </Suspense>\n                            </Grid>\n                        )}\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","import React, { ReactNode } from \"react\"\nimport { styled } from \"@mui/material/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@mui/material/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@mui/material/CardContent\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"../ServiceButton\"\nimport useChange from \"../../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport { JDService } from \"../../../jacdac-ts/src/jdom/service\"\nimport { CardActions } from \"@mui/material\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport { isInfrastructure } from \"../../../jacdac-ts/src/jdom/spec\"\n\nconst PREFIX = \"DeviceCard\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n    bullet: `${PREFIX}bullet`,\n    title: `${PREFIX}title`,\n    pos: `${PREFIX}pos`,\n}\n\nconst StyledCard = styled(Card)(() => ({\n    [`&.${classes.root}`]: {},\n\n    [`& .${classes.bullet}`]: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n}))\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n    showReset?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n        showReset,\n    } = props\n\n    const services = useChange(device, () =>\n        device.services().filter(srv => !isInfrastructure(srv.specification))\n    )\n\n    return (\n        <StyledCard className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n                showReset={showReset}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.nodeId}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </StyledCard>\n    )\n}\n","import { Grid, GridSpacing } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function AutoGrid(props: {\n    children: JSX.Element | JSX.Element[]\n    spacing?: GridSpacing\n}) {\n    const { children, spacing } = props\n    if (children && Array.isArray(children))\n        return (\n            <Grid container spacing={spacing}>\n                {(children as JSX.Element[]).map((child, i) => (\n                    <Grid item xs={12} key={child.key || i}>\n                        {child}\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    else return children as JSX.Element\n}\n","import React, { useMemo } from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { isRegister } from \"../../jacdac-ts/src/jdom/spec\"\nimport RegisterInput from \"./RegisterInput\"\nimport useChange from \"../jacdac/useChange\"\nimport AutoGrid from \"./ui/AutoGrid\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport { SystemReg } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function ServiceRegisters(props: {\n    service: JDService\n    registerIdentifiers?: number[]\n    filter?: (register: JDRegister) => boolean\n    showRegisterName?: boolean\n    hideMissingValues?: boolean\n    showTrends?: boolean\n}) {\n    const {\n        service,\n        registerIdentifiers,\n        filter,\n        showRegisterName,\n        hideMissingValues,\n        showTrends,\n    } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers = useMemo(() => {\n        const packets = specification?.packets\n        const ids =\n            registerIdentifiers ||\n            packets?.filter(pkt => isRegister(pkt))?.map(pkt => pkt.identifier)\n        let r = ids?.map(id => service.register(id))?.filter(reg => !!reg) || []\n        if (filter) r = r.filter(filter)\n        return r\n    }, [specification, registerIdentifiers, filter])\n\n    return (\n        <AutoGrid spacing={1}>\n            {registers.map(register => (\n                <RegisterInput\n                    key={register.id}\n                    register={register}\n                    showRegisterName={showRegisterName}\n                    hideMissingValues={hideMissingValues}\n                    showTrend={\n                        showTrends && register.code === SystemReg.Reading\n                    }\n                    visible={true}\n                />\n            ))}\n        </AutoGrid>\n    )\n}\n","import React from \"react\"\nimport { JDEvent } from \"../../jacdac-ts/src/jdom/event\"\nimport { Typography, Badge } from \"@mui/material\"\nimport KindIcon from \"./KindIcon\"\nimport useEventCount from \"../jacdac/useEventCount\"\nimport DeviceName from \"./devices/DeviceName\"\n\nexport default function EventInput(props: {\n    event: JDEvent\n    showDeviceName?: boolean\n    showName?: boolean\n}) {\n    const { event, showName, showDeviceName } = props\n    const count = useEventCount(event)\n    const spec = event.specification\n\n    return (\n        <>\n            {showDeviceName && (\n                <Typography>\n                    <DeviceName device={event.service.device} />/\n                </Typography>\n            )}\n            {showName && spec && (\n                <Typography gutterBottom>{spec.name}</Typography>\n            )}\n            <Badge badgeContent={count} color=\"primary\">\n                <KindIcon kind={\"event\"} />\n            </Badge>\n        </>\n    )\n}\n","import React from \"react\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport { isEvent } from \"../../jacdac-ts/src/jdom/spec\"\nimport EventInput from \"./EventInput\"\nimport AutoGrid from \"./ui/AutoGrid\"\n\nexport default function ServiceEvents(props: {\n    service: JDService\n    eventIdentifiers?: number[]\n    showEventName?: boolean\n}) {\n    const { service, eventIdentifiers, showEventName } = props\n    const spec = service.specification\n    const packets = spec.packets\n    let events = packets.filter(isEvent)\n    if (eventIdentifiers !== undefined)\n        events = events.filter(\n            event => eventIdentifiers.indexOf(event.identifier) > -1\n        )\n\n    return (\n        <AutoGrid spacing={1}>\n            {events.map(event => (\n                <EventInput\n                    key={`event${event.identifier}`}\n                    event={service.event(event.identifier)}\n                    showName={showEventName}\n                />\n            ))}\n        </AutoGrid>\n    )\n}\n","import React from \"react\"\nimport { Typography } from \"@mui/material\"\nimport { InPipeReader } from \"../../jacdac-ts/src/jdom/pipes\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\nimport DeviceName from \"./devices/DeviceName\"\nimport { isReportOf } from \"../../jacdac-ts/src/jdom/spec\"\nimport { packArguments } from \"../../jacdac-ts/src/jdom/command\"\nimport {\n    DecodedPacket,\n    printPacket,\n    serviceName,\n} from \"../../jacdac-ts/src/jdom/pretty\"\nimport { Packet } from \"../../jacdac-ts/src/jdom/packet\"\nimport CmdButton from \"./CmdButton\"\nimport { PackedValues } from \"../../jacdac-ts/src/jdom/pack\"\nimport useBus from \"../jacdac/useBus\"\n\nfunction hasPipeReport(info: jdspec.PacketInfo) {\n    return info.fields.find(f => f.type == \"pipe\")\n}\n\nexport default function CommandInput(props: {\n    service: JDService\n    command: jdspec.PacketInfo\n    showDeviceName?: boolean\n    args?: PackedValues\n    setReports?: (reports: DecodedPacket[]) => void\n}) {\n    const { service, command, showDeviceName, args, setReports } = props\n    const bus = useBus()\n\n    const { specification } = service\n    const requiredArgLength =\n        command.fields.length - (hasPipeReport(command) ? 1 : 0)\n    const missingArguments = (args?.length || 0) !== requiredArgLength\n    const disabled = missingArguments\n    const reportSpec =\n        command.hasReport &&\n        specification.packets.find(p => isReportOf(command, p))\n    const handleClick = async mounted => {\n        const pkt = !args?.length\n            ? Packet.onlyHeader(command.identifier)\n            : packArguments(command, args)\n        if (setReports && reportSpec) {\n            const reportPacket = await service.sendCmdAwaitResponseAsync(pkt)\n            if (!mounted()) return\n            const decoded = reportPacket?.decoded\n            setReports([decoded])\n        } else if (setReports && hasPipeReport(command)) {\n            let inp: InPipeReader\n            try {\n                inp = new InPipeReader(bus)\n                const cmd = inp.openCommand(command.identifier)\n                await service.sendPacketAsync(cmd, true)\n                console.log(printPacket(cmd)) // keep this call, it sets up pretty to understand packages\n                const { output } = await inp.readAll()\n                const reports = output\n                    .filter(ot => !!ot.data?.length)\n                    .map(ot => ot?.decoded)\n                if (!mounted()) return\n                setReports(reports)\n            } finally {\n                inp?.unmount()\n            }\n        } else await service.sendPacketAsync(pkt, true)\n    }\n\n    return (\n        <CmdButton\n            trackName=\"command.input\"\n            trackProperties={{\n                service: serviceName(service.serviceClass),\n                serviceClass: service.serviceClass,\n            }}\n            variant=\"contained\"\n            disabled={disabled}\n            onClick={handleClick}\n        >\n            {showDeviceName && (\n                <Typography>\n                    <DeviceName device={service.device} />/\n                </Typography>\n            )}\n            {command.name.replace(/_/g, \" \")}\n        </CmdButton>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport { DecodedPacket } from \"../../jacdac-ts/src/jdom/pretty\"\nimport MembersInput from \"./fields/MembersInput\"\n\nexport default function DecodedPacketItem(props: { pkt: DecodedPacket }) {\n    const { pkt } = props\n    const { decoded, service } = pkt\n    const specifications = useMemo(() => decoded.map(d => d.info), [decoded])\n    const values = useMemo(() => decoded.map(d => d.value), [decoded])\n    return (\n        <MembersInput\n            serviceSpecification={service}\n            specifications={specifications}\n            values={values}\n        />\n    )\n}\n","import React, { useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { JDService } from \"../../jacdac-ts/src/jdom/service\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@mui/material/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@mui/material/CardContent\"\n// tslint:disable-next-line: no-submodule-imports\nimport Typography from \"@mui/material/Typography\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport ServiceRegisters from \"./ServiceRegisters\"\nimport ServiceEvents from \"./ServiceEvents\"\nimport { isCommand } from \"../../jacdac-ts/src/jdom/spec\"\nimport { CardActions, List, ListItem } from \"@mui/material\"\nimport DeviceCardHeader from \"./devices/DeviceCardHeader\"\nimport { DeviceLostAlert } from \"./alert/DeviceLostAlert\"\nimport CommandInput from \"./CommandInput\"\nimport { DecodedPacket } from \"../../jacdac-ts/src/jdom/pretty\"\nimport DecodedPacketItem from \"./DecodedPacketItem\"\nimport ServiceSpecificationStatusAlert from \"./specification/ServiceSpecificationStatusAlert\"\nimport MembersInput from \"./fields/MembersInput\"\n\nconst PREFIX = \"ServiceCard\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n    bullet: `${PREFIX}bullet`,\n    title: `${PREFIX}title`,\n    pos: `${PREFIX}pos`,\n}\n\nconst StyledCard = styled(Card)({\n    [`&.${classes.root}`]: {\n        minWidth: 275,\n    },\n    [`& .${classes.bullet}`]: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n})\n\nexport default function ServiceCard(props: {\n    service: JDService\n    linkToService?: boolean\n    showServiceName?: boolean\n    showMemberName?: boolean\n    registerIdentifiers?: number[]\n    eventIdentifiers?: number[]\n    commandIdentifier?: number\n}) {\n    const {\n        service,\n        linkToService,\n        registerIdentifiers,\n        showServiceName,\n        showMemberName,\n        eventIdentifiers,\n        commandIdentifier,\n    } = props\n    const { specification } = service\n    const [reports, setReports] = useState<DecodedPacket[]>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [commandArgs, setCommandArgs] = useState<any[]>([])\n\n    const hasCommandIdentifier = commandIdentifier !== undefined\n    const hasRegisterIdentifiers = !!registerIdentifiers?.length\n    const hasEventIdentifiers = !!eventIdentifiers?.length\n    const command =\n        commandIdentifier !== undefined &&\n        specification?.packets.find(\n            pkt => isCommand(pkt) && pkt.identifier === commandIdentifier\n        )\n\n    return (\n        <StyledCard className={classes.root}>\n            <DeviceCardHeader device={service.device} showAvatar={true} />\n            <CardContent>\n                {showServiceName && (\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        <Link\n                            to={\n                                linkToService && service.specification\n                                    ? `/services/${service.specification.shortId}/`\n                                    : \"/clients/javascript/jdom/service\"\n                            }\n                        >\n                            {service.name}\n                        </Link>\n                    </Typography>\n                )}\n                <Typography variant=\"body2\" component=\"div\">\n                    {hasRegisterIdentifiers && (\n                        <ServiceRegisters\n                            service={service}\n                            showRegisterName={showMemberName}\n                            registerIdentifiers={registerIdentifiers}\n                        />\n                    )}\n                    {hasEventIdentifiers && (\n                        <ServiceEvents\n                            service={service}\n                            showEventName={showMemberName}\n                            eventIdentifiers={eventIdentifiers}\n                        />\n                    )}\n                    {command && (\n                        <MembersInput\n                            serviceSpecification={specification}\n                            serviceMemberSpecification={command}\n                            specifications={command.fields}\n                            values={commandArgs}\n                            setValues={setCommandArgs}\n                            showDataType={true}\n                        />\n                    )}\n                    {!!reports?.length && (\n                        <List key={\"reports\"} dense>\n                            {reports?.map((report, ri) => (\n                                <ListItem key={`report${ri}`}>\n                                    <DecodedPacketItem pkt={report} />\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </Typography>\n                {!hasCommandIdentifier &&\n                    !hasRegisterIdentifiers &&\n                    !hasEventIdentifiers && (\n                        <ServiceSpecificationStatusAlert\n                            specification={specification}\n                        />\n                    )}\n                <DeviceLostAlert device={service?.device} />\n            </CardContent>\n            <CardActions>\n                {command && (\n                    <CommandInput\n                        service={service}\n                        command={command}\n                        args={commandArgs}\n                        setReports={setReports}\n                    />\n                )}\n            </CardActions>\n        </StyledCard>\n    )\n}\n","import React from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Grid } from \"@mui/material\"\nimport DeviceCard from \"./DeviceCard\"\nimport ServiceCard from \"../ServiceCard\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport useDevices from \"../hooks/useDevices\"\nimport useServices from \"../hooks/useServices\"\n\nconst PREFIX = \"DeviceList\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        marginBottom: theme.spacing(1),\n    },\n}))\n\nexport default function DeviceList(props: {\n    serviceClass?: number\n    linkToService?: boolean\n    registerIdentifiers?: number[]\n    eventIdentifiers?: number[]\n    commandIdentifier?: number\n    showServiceName?: boolean\n    showMemberName?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showServiceButtons?: boolean\n}) {\n    const {\n        serviceClass,\n        linkToService,\n        registerIdentifiers,\n        showServiceName,\n        showMemberName,\n        showFirmware,\n        showTemperature,\n        showServiceButtons,\n        eventIdentifiers,\n        commandIdentifier,\n    } = props\n    const devices = useDevices({ serviceClass })\n    const services = useServices({ serviceClass })\n\n    const hasServiceClass = serviceClass !== undefined\n    const gridBreakpoints = useGridBreakpoints(devices?.length)\n\n    return (\n        <StyledGrid container spacing={2} className={classes.root}>\n            {!hasServiceClass &&\n                devices.map(device => (\n                    <Grid key={device.id} item {...gridBreakpoints}>\n                        <DeviceCard\n                            device={device}\n                            showDescription={true}\n                            showTemperature={showTemperature}\n                            showFirmware={showFirmware}\n                            showServices={showServiceButtons}\n                        />\n                    </Grid>\n                ))}\n            {hasServiceClass &&\n                services.map(service => {\n                    return (\n                        <Grid key={service.nodeId} item {...gridBreakpoints}>\n                            <ServiceCard\n                                service={service}\n                                linkToService={linkToService}\n                                showServiceName={showServiceName}\n                                showMemberName={showMemberName}\n                                registerIdentifiers={registerIdentifiers}\n                                eventIdentifiers={eventIdentifiers}\n                                commandIdentifier={commandIdentifier}\n                            />\n                        </Grid>\n                    )\n                })}\n        </StyledGrid>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip } from \"@mui/material\"\nimport KindIcon, { kindName } from \"./KindIcon\"\nimport PacketsContext from \"./PacketsContext\"\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function KindChip(props: { kind: string; className?: string }) {\n    const { kind, className } = props\n    const { filter, setFilter } = useContext(PacketsContext)\n    const { setDrawerType } = useContext(AppContext)\n    const icon = KindIcon({ kind })\n    const chipFilter = `kind:${kind}`\n    const filtered = filter && filter.indexOf(chipFilter) > -1\n    const handleClick = () => {\n        if (filtered) setFilter(filter?.replace(chipFilter, \"\")?.trim())\n        else setFilter(filter?.trim() + \" \" + chipFilter)\n        setDrawerType(DrawerType.Packets)\n    }\n    return (\n        <Tooltip\n            title={\n                filtered\n                    ? `remove filter ${chipFilter}`\n                    : `add filter ${chipFilter}`\n            }\n        >\n            <span>\n                <Chip\n                    onClick={handleClick}\n                    className={className}\n                    size=\"small\"\n                    label={kindName(kind)}\n                    icon={icon}\n                />\n            </span>\n        </Tooltip>\n    )\n}\n","import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport Chip from \"@mui/material/Chip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport CategoryIcon from \"@mui/icons-material/Category\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function PacketMembersChip(props: {\n    spec: jdspec.PacketInfo\n    members: jdspec.PacketMember[]\n    className?: string\n}) {\n    const { members, className, spec } = props\n    if (!members?.length) return null\n\n    const label = spec?.packFormat\n    const title = \"pack format\"\n    return (\n        <Tooltip title={title}>\n            <Chip\n                style={{ textDecoration: \"none\" }}\n                href=\"/reference/pack-format/\"\n                component=\"a\"\n                clickable\n                className={className}\n                size=\"small\"\n                icon={<CategoryIcon />}\n                label={label}\n            />\n        </Tooltip>\n    )\n}\n","import { Typography } from \"@mui/material\"\nimport React, { ReactNode } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string)\n    mode?: string\n    download?: string\n    actions?: ReactNode\n    url?: string\n    caption?: string | JSX.Element | JSX.Element[]\n    copy?: boolean\n}) {\n    const { value, mode, download, url, caption, actions, copy } = props\n    const v: string = typeof value === \"function\" ? value() : value\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return (\n        <>\n            <CodeBlock\n                className={className}\n                downloadName={download}\n                downloadText={download && v}\n                actions={actions}\n                url={url}\n                copy={copy}\n            >\n                {v}\n            </CodeBlock>\n            {caption && <Typography variant=\"caption\">{caption}</Typography>}\n        </>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Tabs, Tab } from \"@mui/material\"\nimport TabPanel from \"../ui/TabPanel\"\nimport Snippet from \"../ui/Snippet\"\nimport { packInfo } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    isCommand,\n    isEvent,\n    isRegister,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PaperBox from \"../ui/PaperBox\"\n\nexport default function PacketSpecificationSource(props: {\n    serviceClass: number\n    packetInfo: jdspec.PacketInfo\n    reportInfo?: jdspec.PacketInfo\n    pipeReportInfo?: jdspec.PacketInfo\n}) {\n    const { serviceClass, packetInfo } = props\n    const [tab, setTab] = useState(0)\n\n    const info = serviceSpecificationFromClassIdentifier(serviceClass)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    // TODO: render commands\n    if (\n        !info ||\n        !packetInfo?.fields?.length ||\n        !(isRegister(packetInfo) || isCommand(packetInfo) || isEvent(packetInfo))\n    )\n        return null\n\n    let index = 0\n    return (\n        <PaperBox>\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                {[\"TypeScript\"]\n                    .filter(n => !!n)\n                    .map(n => (\n                        <Tab key={n} label={n} />\n                    ))}\n            </Tabs>\n            <TabPanel value={tab} index={index++}>\n                <Snippet\n                    value={() =>\n                        packInfo(info, packetInfo, {\n                            isStatic: false,\n                            useBooleans: false,\n                            useJDOM: true,\n                        }).buffers\n                    }\n                    mode={\"typescript\"}\n                />\n            </TabPanel>\n        </PaperBox>\n    )\n}\n","import {\n    isRegister,\n    isEvent,\n    isCommand,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport { styled } from \"@mui/material/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport Chip from \"@mui/material/Chip\"\nimport DeviceList from \"../devices/DeviceList\"\nimport IDChip from \"../IDChip\"\nimport KindChip from \"../KindChip\"\nimport PacketMembersChip from \"../PacketMembersChip\"\nimport Markdown from \"../ui/Markdown\"\nimport { prettyMemberUnit } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport PacketSpecificationSource from \"./PacketSpecificationSource\"\n\nconst PREFIX = \"PacketSpecification\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n    field: `${PREFIX}field`,\n    chip: `${PREFIX}chip`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        marginBottom: theme.spacing(1),\n    },\n\n    [`& .${classes.field}`]: {\n        \"& > div\": { verticalAlign: \"middle\" },\n    },\n\n    [`& .${classes.chip}`]: {\n        margin: theme.spacing(0.5),\n    },\n}))\n\nfunction MemberType(props: { member: jdspec.PacketMember }) {\n    const { member } = props\n\n    const helperText = prettyMemberUnit(member, true)\n\n    return (\n        <>\n            <li className={classes.field}>\n                {member.name !== \"_\" && `${member.name}: `}\n                <code>{helperText}</code>\n            </li>\n        </>\n    )\n}\n\nfunction MembersType(props: {\n    members: jdspec.PacketMember[]\n    title?: string\n}) {\n    const { members, title } = props\n\n    let repeatIndex = members.findIndex(m => !!m.startRepeats)\n    if (repeatIndex < 0) repeatIndex = members.length\n    const beforeRepeat = members.slice(0, repeatIndex)\n    const afterRepeat = members.slice(repeatIndex)\n\n    return (\n        <>\n            {!!title && <h4>{title}</h4>}\n            {!!beforeRepeat.length && (\n                <ul>\n                    {beforeRepeat.map(member => (\n                        <MemberType key={member.name} member={member} />\n                    ))}\n                </ul>\n            )}\n            {!!afterRepeat.length && (\n                <>\n                    <h5>starts repeating</h5>\n                    <ul>\n                        {afterRepeat.map(member => (\n                            <MemberType key={member.name} member={member} />\n                        ))}\n                    </ul>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default function PacketSpecification(props: {\n    serviceClass: number\n    packetInfo: jdspec.PacketInfo\n    reportInfo?: jdspec.PacketInfo\n    pipeReportInfo?: jdspec.PacketInfo\n    showDevices?: boolean\n}) {\n    const {\n        serviceClass,\n        packetInfo,\n        reportInfo,\n        pipeReportInfo,\n        showDevices,\n    } = props\n\n    if (!packetInfo)\n        return (\n            <Alert severity=\"error\">{`Unknown member ${serviceClass.toString(\n                16\n            )}:${packetInfo.identifier}`}</Alert>\n        )\n    const { fields } = packetInfo\n    const isCmd = isCommand(packetInfo)\n\n    return (\n        <Root className={classes.root}>\n            <h3 id={`${packetInfo.kind}:${packetInfo.identifier}`}>\n                {packetInfo.name}\n                <PacketMembersChip\n                    spec={packetInfo}\n                    className={classes.chip}\n                    members={packetInfo.fields}\n                />\n                {packetInfo.identifier !== undefined && (\n                    <IDChip\n                        className={classes.chip}\n                        id={packetInfo.identifier}\n                        filter={`pkt:0x${packetInfo.identifier.toString(16)}`}\n                    />\n                )}\n                <KindChip className={classes.chip} kind={packetInfo.kind} />\n                {packetInfo.optional && (\n                    <Chip\n                        className={classes.chip}\n                        size=\"small\"\n                        label=\"optional\"\n                    />\n                )}\n                {packetInfo.derived && (\n                    <Chip\n                        className={classes.chip}\n                        size=\"small\"\n                        label=\"derived\"\n                    />\n                )}\n            </h3>\n            <Markdown source={packetInfo.description} />\n            {!!fields.length && (\n                <MembersType members={fields} title={isCmd && \"Arguments\"} />\n            )}\n            {!!reportInfo && (\n                <MembersType members={reportInfo.fields} title=\"Report\" />\n            )}\n            {!!pipeReportInfo && (\n                <MembersType\n                    members={pipeReportInfo.fields}\n                    title=\"Pipe report\"\n                />\n            )}\n            <PacketSpecificationSource\n                serviceClass={serviceClass}\n                packetInfo={packetInfo}\n                reportInfo={reportInfo}\n            />\n            {showDevices && isCommand(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    commandIdentifier={packetInfo.identifier}\n                />\n            )}\n            {showDevices && isRegister(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    registerIdentifiers={[packetInfo.identifier]}\n                />\n            )}\n            {showDevices && isEvent(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    eventIdentifiers={[packetInfo.identifier]}\n                />\n            )}\n        </Root>\n    )\n}\n","import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@mui/material\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length) return <></>\n\n    return (\n        <Fragment>\n            <h2>Enums</h2>\n            {enums.map(e => (\n                <Fragment key={e.name}>\n                    <h3>\n                        {e.name}{\" \"}\n                        {e.isFlags && <Chip label=\"flags\" size=\"small\" />}\n                    </h3>\n                    <ul>\n                        {Object.keys(e.members).map(en => (\n                            <li key={en}>\n                                {en}:{\" \"}\n                                <code>0x{e.members[en].toString(16)}</code>\n                            </li>\n                        ))}\n                    </ul>\n                </Fragment>\n            ))}\n        </Fragment>\n    )\n}\n","import { useEffect } from \"react\"\nimport {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport default function useServiceProviderFromServiceClass(\n    serviceClass: number\n): void {\n    const bus = useBus()\n\n    // run once\n    useEffect(() => {\n        const devices = bus.devices({ serviceClass })\n        const def =\n            !devices.length &&\n            serviceProviderDefinitionFromServiceClass(serviceClass)\n        const provider = def && addServiceProvider(bus, def)\n        return () => bus.removeServiceProvider(provider)\n    }, [serviceClass])\n}\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"./PacketSpecification\"\nimport IDChip from \"../IDChip\"\nimport Markdown from \"../ui/Markdown\"\nimport EnumSpecification from \"../EnumSpecification\"\nimport { Box, Grid, Typography } from \"@mui/material\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"../hooks/useServiceProviderFromServiceClass\"\nimport DashbardDeviceItem from \"../dashboard/DashboardDeviceItem\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const devices = useDevices({ serviceClass })\n    return (\n        <Grid container spacing={1}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showDerived?: boolean\n}) {\n    const { service: node, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            {node.notes.short && (\n                <Typography variant=\"body2\">{node.notes.short}</Typography>\n            )}\n            {!!node.extends?.length && (\n                <div>\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </div>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map(pkt => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.identifier}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </>\n    )\n}\n","import React from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport ServiceSpecification from \"../components/specification/ServiceSpecification\"\n\nimport CoreHead from \"../components/shell/Head\"\nexport const Head = props => <CoreHead {...props} />\n\nexport default function Page(props: {\n    pageContext: { node: { classIdentifier: number } }\n}) {\n    const spec = serviceSpecificationFromClassIdentifier(\n        props.pageContext.node.classIdentifier\n    )\n    return <ServiceSpecification service={spec} />\n}\n"],"names":["filter","setFilter","useContext","ids","id","filtered","packetFilter","handleFilterClick","setPacketFilter","setDrawerType","DrawerType","icon","title","meta","useStaticQuery","metaTitle","pageContext","site","metaDescription","description","data","name","content","specification","ServiceSpecificationStatusAlert","React","SuspensedMarkdown","lazy","useState","useEffect","event","setCount","others","service","aspectRatio","hasImage","useDeviceSpecification","imageUrl","useDeviceImage","DeviceFirmwareVersionChip","DeviceTemperatureChip","useDeviceDescription","showDescription","showMedia","showAvatar","showDeviceId","device","s","showFirmware","showTemperature","PREFIX","classes","root","bullet","pos","StyledCard","styled","display","margin","transform","fontSize","marginBottom","spec","navigate","register","useChange","_","ControlReg","useRegisterUnpackedValue","services","srv","isInfrastructure","showServices","navigateToService","children","Array","child","registers","useMemo","packets","registerIdentifiers","pkt","isRegister","r","reg","showTrends","SystemReg","count","useEventCount","showDeviceName","showName","events","eventIdentifiers","info","f","bus","useBus","requiredArgLength","command","hasPipeReport","missingArguments","disabled","reportSpec","p","isReportOf","handleClick","args","Packet","packArguments","setReports","reportPacket","mounted","decoded","inp","cmd","console","printPacket","reports","output","ot","serviceName","serviceClass","specifications","d","values","minWidth","hasCommandIdentifier","commandIdentifier","hasRegisterIdentifiers","hasEventIdentifiers","isCommand","showServiceName","linkToService","StyledGrid","theme","devices","useDevices","useServices","hasServiceClass","gridBreakpoints","useGridBreakpoints","KindIcon","chipFilter","kindName","members","label","textDecoration","v","value","className","mode","download","caption","serviceSpecificationFromClassIdentifier","handleTabChange","setTab","packetInfo","isEvent","index","n","packInfo","isStatic","useBooleans","useJDOM","field","chip","Root","verticalAlign","helperText","prettyMemberUnit","member","repeatIndex","m","beforeRepeat","afterRepeat","isCmd","fields","reportInfo","pipeReportInfo","showDevices","enums","Object","en","e","def","serviceProviderDefinitionFromServiceClass","provider","addServiceProvider","node","showDerived","commands","pipeReports","useServiceProviderFromServiceClass","reportOf","rep","pipeReportOf","isPipeReportOf","i","serviceSpecificationFromName","note","group","l","Head","props"],"sourceRoot":""}