{"version":3,"file":"component---src-templates-device-company-tsx-77e9149a8d6e004bfbc9.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/shell/Head.tsx","webpack://jacdac-docs/./src/components/specification/DeviceSpecificationCard.tsx","webpack://jacdac-docs/./src/components/specification/DeviceSpecificationList.tsx","webpack://jacdac-docs/./src/components/ui/FilterChip.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecificationSelect.tsx","webpack://jacdac-docs/./src/components/specification/FilteredDeviceSpecificationList.tsx","webpack://jacdac-docs/./src/templates/device-company.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport type { HeadProps } from \"gatsby\"\n\nexport default function Head(\n    props: HeadProps & {\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    }\n) {\n    const {\n        pageContext,\n        data,\n        description,\n        image,\n        title,\n        meta = [],\n    }: {\n        pageContext: { title?: string }\n        data?: { page?: { description?: string } }\n        description?: string\n        image?: string\n        title?: string\n        meta?: { name: string; content: string }[]\n    } = props\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    )\n    let metaTitle = title || pageContext?.title || site?.siteMetadata?.title\n    if (!/^(Jacdac|DeviceScript)/i.test(metaTitle))\n        metaTitle = `Jacdac - ${metaTitle}`\n    const metaDescription =\n        description ||\n        data?.page?.description ||\n        site?.siteMetadata?.description\n    return (\n        <>\n            <title key=\"title\">{metaTitle}</title>\n            {[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    name: \"og:image\",\n                    content: image,\n                },\n                {\n                    name: `og:title`,\n                    content: metaTitle,\n                },\n                {\n                    name: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    name: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n                ...meta,\n            ]\n                .filter(({ content }) => !!content)\n                .map(({ name, content }) => (\n                    <meta key={name} name={name} content={content} />\n                ))}\n            <link\n                key=\"fontsgoogle\"\n                rel=\"preconnect\"\n                href=\"https://fonts.googleapis.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <link\n                key=\"gitusercontent\"\n                rel=\"preconnect\"\n                href=\"https://raw.githubusercontent.com\"\n                crossOrigin=\"anonymous\"\n            />\n            <meta\n                key=\"viewport\"\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n        </>\n    )\n}\n","import React from \"react\"\nimport { Card, CardContent, Chip, Typography } from \"@mui/material\"\nimport {\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { CardActionArea } from \"gatsby-theme-material-ui\"\nimport { uniqueMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDeviceImage from \"../devices/useDeviceImage\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ChipList from \"../ui/ChipList\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/catalog\"\n\nexport default function DeviceSpecificationCard(props: {\n    specification: jdspec.DeviceSpec\n    size: \"list\" | \"preview\" | \"catalog\"\n    onClick?: () => void\n    hideChips?: boolean\n    hideServices?: boolean\n}) {\n    const { specification, size, onClick, hideChips, hideServices } = props\n    const {\n        id,\n        name,\n        version,\n        company,\n        services,\n        hardwareDesign,\n        firmwareSource,\n        storeLink,\n        makeCodeRepo,\n        tags,\n    } = specification\n    const imageUrl = useDeviceImage(specification, size)\n    const names = [\n        tags?.indexOf(\"kit\") > -1 ? \"kit\" : undefined,\n        tags?.indexOf(\"hub\") > -1 ? \"hub\" : undefined,\n        tags?.indexOf(\"adapter\") > -1 ? \"adapter\" : undefined,\n        ...uniqueMap(\n            services || [],\n            srv => srv + \"\",\n            srv => srv\n        ).map(sc =>\n            humanify(\n                serviceSpecificationFromClassIdentifier(\n                    sc\n                )?.shortName.toLowerCase()\n            )\n        ),\n    ]\n        .filter(s => !!s)\n        .join(\", \")\n    const to = onClick ? undefined : `/devices/${identifierToUrlPath(id)}`\n\n    return (\n        <Card raised>\n            <CardActionArea to={to} onClick={onClick}>\n                <img\n                    src={imageUrl}\n                    style={{ aspectRatio: \"4 / 3\", width: \"100%\" }}\n                    alt={`photograph of ${specification.name}`}\n                    loading=\"lazy\"\n                />\n                <CardContent>\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                        {company}\n                    </Typography>\n                    <Typography\n                        gutterBottom\n                        variant=\"subtitle1\"\n                        component=\"div\"\n                    >\n                        {name}\n                        {version && (\n                            <Typography\n                                sx={{ ml: 1 }}\n                                variant=\"caption\"\n                                component=\"span\"\n                            >\n                                v{version}\n                            </Typography>\n                        )}\n                    </Typography>\n                    {!hideServices && names && (\n                        <Typography component=\"div\" variant=\"subtitle2\">\n                            {names}\n                        </Typography>\n                    )}\n                    {!hideChips && (\n                        <ChipList>\n                            {!storeLink && (\n                                <Chip size=\"small\" label=\"prototype\" />\n                            )}\n                            {!!makeCodeRepo?.length && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"MakeCode\"\n                                    title=\"MakeCode extension available.\"\n                                />\n                            )}\n                            {firmwareSource && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"firmware code\"\n                                    title=\"Firmware source is avaiable.\"\n                                />\n                            )}\n                            {hardwareDesign && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"hardware design\"\n                                    title=\"Hardware design files available.\"\n                                />\n                            )}\n                        </ChipList>\n                    )}\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n","import React, { ReactNode, useMemo } from \"react\"\nimport { Grid, SxProps, Theme } from \"@mui/material\"\nimport { escapeDeviceIdentifier } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport { serviceName as renderServiceName } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport DeviceSpecificationCard from \"./DeviceSpecificationCard\"\nimport { isEC30 } from \"../enclosure/ec30\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport GridHeader from \"../ui/GridHeader\"\n\nexport default function DeviceSpecificationList(props: {\n    sx?: SxProps<Theme>\n    header?: ReactNode\n    query?: string\n    count?: number\n    company?: string\n    serviceClass?: number\n    serviceName?: string\n    devices?: jdspec.DeviceSpec[]\n    ids?: string[]\n    updates?: boolean\n    buyNow?: boolean\n    makeCode?: boolean | string\n    firmwareSources?: boolean\n    hardwareDesign?: boolean\n    transports?: jdspec.TransportType[]\n    tags?: string[]\n    ec30?: boolean\n    connector?: \"jacdac\" | \"grove\" | \"none\"\n    shapes?: jdspec.ShapeWellKnown[]\n    onDeviceClick?: (device: jdspec.DeviceSpec) => void\n    hideChips?: boolean\n    hideServices?: boolean\n}) {\n    const {\n        sx,\n        header,\n        query,\n        count,\n        serviceClass,\n        serviceName,\n        company,\n        devices,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports,\n        tags,\n        ec30,\n        connector,\n        shapes,\n        ids,\n        onDeviceClick,\n        hideChips,\n        hideServices,\n    } = props\n    const specifications = useDeviceSpecifications({\n        includeExperimental: !buyNow,\n    })\n    const specs = useMemo(() => {\n        let r = (devices || specifications).slice(0)\n        if (ids?.length) r = r.filter(({ id }) => ids.indexOf(id) > -1)\n        if (company) {\n            const lc = escapeDeviceIdentifier(company)\n            r = r.filter(spec =>\n                escapeDeviceIdentifier(spec.company).startsWith(lc)\n            )\n        }\n        if (!isNaN(serviceClass))\n            r = r.filter(spec => spec.services?.indexOf(serviceClass) > -1)\n        if (serviceName) {\n            const si = serviceSpecificationFromName(serviceName)\n            if (si)\n                r = r.filter(\n                    spec => spec.services?.indexOf(si.classIdentifier) > -1\n                )\n        }\n        if (updates) r = r.filter(spec => spec.repo)\n        if (buyNow !== undefined)\n            r = r.filter(spec => !!spec.storeLink === buyNow)\n        if (hardwareDesign) r = r.filter(spec => spec.hardwareDesign)\n        if (connector === \"jacdac\")\n            r = r.filter(\n                spec =>\n                    spec.connector !== \"noConnector\" &&\n                    spec.connector !== \"grove\" &&\n                    spec.connector !== \"qwiic\"\n            )\n        else if (connector === \"grove\")\n            r = r.filter(\n                spec => spec.connector === \"grove\" || spec.connector === \"qwiic\"\n            )\n        else if (connector === \"none\")\n            r = r.filter(\n                spec =>\n                    spec.connector === \"noConnector\" ||\n                    spec.connector === \"edgeIndependent\"\n            )\n\n        if (firmwareSources) r = r.filter(spec => spec.firmwareSource)\n        if (ec30)\n            r = r.filter(\n                spec => isEC30(spec.shape) || spec.tags?.includes(\"ec30\")\n            )\n        if (shapes)\n            r = r.filter(spec => shapes.some(shape => shape === spec.shape))\n        if (typeof makeCode === \"string\")\n            r = r.filter(spec =>\n                spec.makeCodeRepo?.some(r => r.target === makeCode)\n            )\n        else if (makeCode !== undefined)\n            r = r.filter(spec => !!spec.makeCodeRepo?.length === makeCode)\n        if (transports?.length)\n            r = r.filter(spec => transports.indexOf(spec.transport?.type) > -1)\n        if (tags?.length)\n            r = r.filter(spec => tags.every(tag => spec.tags?.includes(tag)))\n        if (query)\n            r = r.filter(spec =>\n                [\n                    spec.name,\n                    spec.description,\n                    spec.company,\n                    ...(spec.productIdentifiers || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(srv => renderServiceName(srv)),\n                ].some(s => s?.toLowerCase()?.indexOf(query.toLowerCase()) > -1)\n            )\n        r = r.sort((a, b) => {\n            // kits first\n            let c =\n                -(a.tags?.indexOf(\"kit\") > -1 ? 1 : 0) +\n                (b.tags?.indexOf(\"kit\") > -1 ? 1 : 0)\n            if (c) return c\n            // device with transports\n            c = -(a.transport ? 1 : 0) + (b.transport ? 1 : 0)\n            if (c) return c\n            // use ec30 shape\n            c = -(isEC30(a.shape) ? 1 : 0) + (isEC30(b.shape) ? 1 : 0)\n            if (c) return c\n            // with connectors first\n            c =\n                -(a.connector === \"noConnector\" ||\n                a.connector === \"edgePassive\" ||\n                a.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0) +\n                (b.connector === \"noConnector\" ||\n                b.connector === \"edgePassive\" ||\n                b.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0)\n            if (c) return c\n\n            // by order\n            c = (a.order || 50) - (b.order || 50)\n            if (c) return c\n            // by name\n            return a.name.localeCompare(b.name)\n        })\n        if (count !== undefined) r = r.slice(0, count)\n        return r\n    }, [\n        query,\n        serviceClass,\n        serviceName,\n        count,\n        company,\n        JSON.stringify(devices?.map(d => d.id)),\n        specifications,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports?.join(\",\"),\n        tags?.join(\",\"),\n        ec30,\n        connector,\n        shapes?.join(\",\"),\n        ids?.join(\",\"),\n    ])\n    const gridBreakpoints = useGridBreakpoints(specs.length)\n    const size = specs?.length < 6 ? \"catalog\" : \"preview\"\n\n    if (!specs.length) return null\n\n    return (\n        <Grid sx={sx} container spacing={3}>\n            {header && <GridHeader title={header} />}\n            {specs.map(specification => (\n                <Grid key={specification.id} item {...gridBreakpoints}>\n                    <DeviceSpecificationCard\n                        specification={specification}\n                        size={size}\n                        onClick={\n                            onDeviceClick\n                                ? () => onDeviceClick(specification)\n                                : undefined\n                        }\n                        hideChips={hideChips}\n                        hideServices={hideServices}\n                    />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport { Chip } from \"@mui/material\"\n\nexport default function FilterChip(props: {\n    label: string\n    value: boolean\n    icon?: JSX.Element\n    onClick: () => void\n}) {\n    const { label, value, icon, onClick } = props\n    const descr = value\n        ? `Disable ${label} filter`\n        : `Filter by ${label} support`\n    return (\n        <Chip\n            label={label}\n            aria-label={descr}\n            title={descr}\n            icon={icon}\n            variant={value ? undefined : \"outlined\"}\n            color={value ? \"secondary\" : undefined}\n            onClick={onClick}\n        />\n    )\n}","import { MenuItem, TextField } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React, { ChangeEvent, useId, useMemo } from \"react\"\nimport { serviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\"\nimport useDeviceCatalog from \"../devices/useDeviceCatalog\"\n\nconst PREFIX = \"ServiceSpecificationSelect\"\n\nconst classes = {\n    root: `${PREFIX}root`,\n}\n\nconst StyledTextField = styled(TextField)(() => ({\n    [`&.${classes.root}`]: {\n        minWidth: \"18rem\",\n    },\n}))\n\nexport default function ServiceSpecificationSelect(props: {\n    label: string\n    serviceClass: number\n    setServiceClass: (serviceClass: number) => void\n    variant?: \"outlined\" | \"filled\" | \"standard\"\n    fullWidth?: boolean\n    error?: string\n    hasRegisteredDevice?: boolean\n}) {\n    const {\n        label,\n        serviceClass,\n        setServiceClass,\n        variant,\n        fullWidth,\n        error,\n        hasRegisteredDevice,\n    } = props\n    const labelId = useId()\n    const deviceCatalog = useDeviceCatalog()\n\n    const specs = useMemo(\n        () =>\n            serviceSpecifications()\n                .filter(\n                    spec =>\n                        spec.status !== \"deprecated\" && !/^_/.test(spec.shortId)\n                )\n                .filter(\n                    spec =>\n                        !hasRegisteredDevice ||\n                        !!deviceCatalog\n                            .specificationsForService(spec.classIdentifier)\n                            ?.filter(spec => spec.status !== \"deprecated\")\n                            ?.length\n                ),\n        [hasRegisteredDevice]\n    )\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) =>\n        setServiceClass(parseInt(event.target.value))\n\n    return (\n        <StyledTextField\n            id={labelId}\n            className={classes.root}\n            label={label}\n            error={!!error}\n            helperText={error}\n            value={isNaN(serviceClass) ? \"\" : serviceClass}\n            select\n            size=\"small\"\n            variant={variant}\n            fullWidth={fullWidth}\n            onChange={handleChange}\n        >\n            <MenuItem key=\"none\" value=\"\">\n                No service selected\n            </MenuItem>\n            {specs.map(spec => (\n                <MenuItem\n                    key={spec.classIdentifier}\n                    value={spec.classIdentifier}\n                >\n                    {spec.name}\n                </MenuItem>\n            ))}\n        </StyledTextField>\n    )\n}\n","import { Grid, TextField } from \"@mui/material\"\nimport React, { ChangeEvent, startTransition, useState } from \"react\"\nimport { arrayConcatMany, unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useBus from \"../../jacdac/useBus\"\nimport useChange from \"../../jacdac/useChange\"\nimport FilterChip from \"../ui/FilterChip\"\nimport DeviceSpecificationList from \"./DeviceSpecificationList\"\nimport ServiceSpecificationSelect from \"./ServiceSpecificationSelect\"\n\nexport default function FilteredDeviceSpecificationList(props: {\n    showSearch?: boolean\n    showServiceList?: boolean\n    count?: number\n    company?: string\n}) {\n    const { showSearch, showServiceList, ...others } = props\n    const bus = useBus()\n    const { deviceCatalog } = bus\n\n    const [serviceClass, setServiceClass] = useState<number>(NaN)\n    const handleServiceChanged = value => setServiceClass(value)\n\n    const [query, setQuery] = useState(\"\")\n    const [firmwareSources, setFirmwareSources] = useState(false)\n    const [hardwareDesign, setHardwareDesign] = useState(false)\n\n    const tags = useChange(deviceCatalog, _ =>\n        unique(\n            arrayConcatMany(\n                _.specifications()\n                    .map(spec => spec.tags)\n                    .filter(tags => !!tags)\n            )\n        )\n    )\n    const [selectedTags, setSelectedTags] = useState<string[]>([])\n\n    const handleSearchQueryChange = (e: ChangeEvent<HTMLInputElement>) =>\n        startTransition(() => setQuery(e.target.value))\n    const handleSetFirmwareSources = () => setFirmwareSources(c => !c)\n    const handleSetHardwareDesign = () => setHardwareDesign(c => !c)\n    const handleSetSelectedTag = (tag: string) => () =>\n        setSelectedTags(ts => {\n            const i = ts.indexOf(tag)\n            if (i < 0) return [...ts, tag]\n            else return [...ts.slice(0, i), ...ts.slice(i + 1)]\n        })\n    return (\n        <>\n            <Grid sx={{ mb: 1 }} container spacing={1}>\n                {showSearch && (\n                    <Grid item xs={12}>\n                        <TextField\n                            tabIndex={0}\n                            type=\"search\"\n                            value={query}\n                            fullWidth={true}\n                            size=\"small\"\n                            label=\"Search devices\"\n                            aria-label=\"Search devices\"\n                            onChange={handleSearchQueryChange}\n                        />\n                    </Grid>\n                )}\n                {showServiceList && (\n                    <Grid item xs>\n                        <ServiceSpecificationSelect\n                            label=\"Filter by Service\"\n                            serviceClass={serviceClass}\n                            setServiceClass={handleServiceChanged}\n                            hasRegisteredDevice={true}\n                        />\n                    </Grid>\n                )}\n                <Grid item>\n                    <FilterChip\n                        label=\"firmware code\"\n                        value={firmwareSources}\n                        onClick={handleSetFirmwareSources}\n                    />\n                </Grid>\n                <Grid item>\n                    <FilterChip\n                        label=\"hardware design\"\n                        value={hardwareDesign}\n                        onClick={handleSetHardwareDesign}\n                    />\n                </Grid>\n                {tags\n                    ?.filter(t => t !== \"ec30\")\n                    .map(tag => (\n                        <Grid item key={tag}>\n                            <FilterChip\n                                label={tag}\n                                value={selectedTags.indexOf(tag) > -1}\n                                onClick={handleSetSelectedTag(tag)}\n                            />\n                        </Grid>\n                    ))}\n            </Grid>\n            <DeviceSpecificationList\n                {...others}\n                query={query}\n                buyNow={true}\n                connector={\"jacdac\"}\n                firmwareSources={firmwareSources}\n                hardwareDesign={hardwareDesign}\n                serviceClass={serviceClass}\n                tags={selectedTags}\n            />\n            <div style={{ marginTop: \"5rem\" }} />\n            <DeviceSpecificationList\n                {...others}\n                header={\"Grove, Qwiic, STEMMA QT connectors\"}\n                query={query}\n                buyNow={true}\n                connector={\"grove\"}\n                firmwareSources={firmwareSources}\n                hardwareDesign={hardwareDesign}\n                serviceClass={serviceClass}\n                tags={selectedTags}\n            />\n            <div style={{ marginTop: \"5rem\" }} />\n            <DeviceSpecificationList\n                {...others}\n                header={\n                    \"No PCB Edge connector (does not connect with Jacdac cables)\"\n                }\n                query={query}\n                buyNow={true}\n                connector={\"none\"}\n                firmwareSources={firmwareSources}\n                hardwareDesign={hardwareDesign}\n                serviceClass={serviceClass}\n                tags={selectedTags}\n            />\n            <div style={{ marginTop: \"5rem\" }} />\n            <DeviceSpecificationList\n                {...others}\n                header={\"Prototypes (not available for purchase)\"}\n                query={query}\n                buyNow={false}\n                firmwareSources={firmwareSources}\n                hardwareDesign={hardwareDesign}\n                serviceClass={serviceClass}\n                tags={selectedTags}\n            />\n        </>\n    )\n}\n","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport FilteredDeviceSpecificationList from \"../components/specification/FilteredDeviceSpecificationList\"\n\nimport CoreHead from \"../components/shell/Head\"\nexport const Head = props => <CoreHead {...props} />\n\nexport default function Page(props: { pageContext: { company: string } }) {\n    const { company } = props.pageContext\n    return (\n        <>\n            <h1>{company}</h1>\n            <FilteredDeviceSpecificationList\n                showServiceList={true}\n                showSearch={true}\n                company={company}\n            />\n            <h2>See Also</h2>\n            <ul>\n                <li>\n                    <Link to=\"/reference/device-registration/\">\n                        device registration\n                    </Link>\n                </li>\n            </ul>\n        </>\n    )\n}\n"],"names":["meta","useStaticQuery","metaTitle","title","pageContext","site","metaDescription","description","data","name","content","imageUrl","useDeviceImage","names","uniqueMap","services","srv","sc","humanify","serviceSpecificationFromClassIdentifier","s","to","onClick","identifierToUrlPath","aspectRatio","width","specification","version","ml","makeCodeRepo","firmwareSource","hardwareDesign","serviceName","specifications","useDeviceSpecifications","includeExperimental","specs","useMemo","r","devices","ids","lc","escapeDeviceIdentifier","spec","isNaN","si","serviceSpecificationFromName","buyNow","connector","isEC30","shapes","shape","makeCode","transports","tags","tag","p","renderServiceName","query","c","a","b","count","JSON","d","gridBreakpoints","useGridBreakpoints","size","header","onDeviceClick","descr","value","PREFIX","classes","root","StyledTextField","styled","minWidth","labelId","useId","deviceCatalog","useDeviceCatalog","serviceSpecifications","handleChange","event","setServiceClass","parseInt","others","bus","useBus","useState","handleServiceChanged","useChange","_","unique","arrayConcatMany","handleSearchQueryChange","e","startTransition","setQuery","handleSetFirmwareSources","setFirmwareSources","handleSetHardwareDesign","setHardwareDesign","handleSetSelectedTag","setSelectedTags","ts","i","mb","showSearch","showServiceList","t","selectedTags","marginTop","Head","props","company"],"sourceRoot":""}