{"version":3,"file":"3511-60a27583386c386effb0.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Fullscreen.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/VideoSettings.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/CheckBox.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","webpack://jacdac-docs/./node_modules/@mui/material/Checkbox/checkboxClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/Checkbox/Checkbox.js","webpack://jacdac-docs/./src/components/ui/MediaRecorderButton.tsx","webpack://jacdac-docs/./src/components/ui/WebCam.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 6h18v5h2V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9v-2H3V6z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12 9 8v8zm7.71 6.43c.03-.29.04-.58.01-.86l1.07-.85c.1-.08.12-.21.06-.32l-1.03-1.79c-.06-.11-.19-.15-.31-.11l-1.28.5c-.23-.17-.48-.31-.75-.42l-.2-1.36c-.02-.13-.12-.22-.25-.22h-2.07c-.12 0-.23.09-.25.21l-.2 1.36c-.26.11-.51.26-.74.42l-1.28-.5c-.12-.05-.25 0-.31.11l-1.03 1.79c-.06.11-.04.24.06.32l1.07.86c-.03.29-.04.58-.01.86l-1.07.85c-.1.08-.12.21-.06.32l1.03 1.79c.06.11.19.15.31.11l1.27-.5c.23.17.48.31.75.42l.2 1.36c.02.12.12.21.25.21h2.07c.12 0 .23-.09.25-.21l.2-1.36c.26-.11.51-.26.74-.42l1.28.5c.12.05.25 0 .31-.11l1.03-1.79c.06-.11.04-.24-.06-.32l-1.06-.85zM19 19.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}, \"1\")], 'VideoSettings');\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useEffect, useRef, useState } from \"react\"\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\"\nimport StopIcon from \"@mui/icons-material/Stop\"\nimport { downloadUrl } from \"../../../jacdac-ts/src/embed/filestorage\"\nimport IconButtonWithProgress from \"./IconButtonWithProgress\"\n\nexport function supportsMediaRecorder() {\n    return typeof MediaRecorder !== \"undefined\"\n}\n\nasync function downloadBlob(blob: Blob, name: string) {\n    const url = URL.createObjectURL(blob)\n    console.debug(`webcam: download video`, { blob, url })\n    await downloadUrl(url, name)\n    window.URL.revokeObjectURL(url)\n}\n\nexport function MediaRecorderButton(props: { stream: MediaStream }) {\n    const { stream } = props\n    const [recording, setRecording] = useState(false)\n    const recorderRef = useRef<MediaRecorder>(null)\n\n    const startRecording = async () => {\n        console.debug(`webcam: start recording`)\n        const chunks: Blob[] = []\n        const options = {\n            mimeType: \"video/webm;codecs=H264\",\n        }\n        const recorder = (recorderRef.current = new MediaRecorder(\n            stream,\n            options\n        ))\n        recorder.ondataavailable = (e: BlobEvent) => {\n            console.debug(`webcam: recording chunk`, { data: e.data })\n            e.data.size && chunks.push(e.data)\n        }\n\n        const download = () => {\n            console.debug(`webcam: download webm (chunks: ${chunks.length})`, {\n                chunks,\n            })\n            const blob = new Blob(chunks, {\n                type: \"video/webm\",\n            })\n            downloadBlob(blob, \"recording.webm\")\n        }\n\n        recorder.onstop = download\n        recorder.onerror = download\n        recorder.start()\n        setRecording(true)\n    }\n\n    const stopRecording = () => {\n        try {\n            if (recorderRef.current?.state === \"recording\") {\n                console.debug(`webcam: stop recording`)\n                recorderRef.current?.stop()\n            }\n        } catch (e) {\n            console.debug(e)\n        }\n        recorderRef.current = undefined\n        setRecording(false)\n    }\n    useEffect(() => {\n        stopRecording()\n        return () => stopRecording()\n    }, [stream])\n\n    return (\n        <IconButtonWithProgress\n            indeterminate={recording}\n            disabled={!stream}\n            title={recording ? \"Stop recording\" : \"Start recording\"}\n            onClick={recording ? stopRecording : startRecording}\n        >\n            {recording ? <StopIcon /> : <FiberManualRecordIcon />}\n        </IconButtonWithProgress>\n    )\n}\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport {\n    CardContent,\n    FormControlLabel,\n    FormControl,\n    MenuItem,\n    Select,\n    SelectChangeEvent,\n    Checkbox,\n    Grid,\n} from \"@mui/material\"\nimport React, {\n    CSSProperties,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport useMounted from \"../hooks/useMounted\"\nimport AppContext from \"../AppContext\"\nimport { Alert } from \"@mui/material\"\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\"\nimport DraggableCard from \"./DraggableCard\"\nimport VideoSettingsIcon from \"@mui/icons-material/VideoSettings\"\nimport {\n    MediaRecorderButton,\n    supportsMediaRecorder,\n} from \"./MediaRecorderButton\"\n\nexport default function WebCam() {\n    const { setShowWebCam } = useContext(AppContext)\n    const [devices, setDevices] = useState<MediaDeviceInfo[]>()\n    const [deviceId, setDeviceId] = useLocalStorage(\"webcam_deviceid\", \"\")\n    const [working, setWorking] = useState(false)\n    const [flip, setFlip] = useLocalStorage(\"webcam_flip\", false)\n    const streamRef = useRef<MediaStream>()\n    const videoRef = useRef<HTMLVideoElement>()\n    const [settingsOpen, setSettingsOpen] = useState(false)\n    const mounted = useMounted()\n\n    const supportsFullScreen =\n        typeof document !== \"undefined\" && !!document.fullscreenEnabled\n\n    const handleClose = async () => await setShowWebCam(false)\n    const handleSettings = () => {\n        console.debug(`toggle settings`, { settingsOpen })\n        setSettingsOpen(!settingsOpen)\n    }\n    const handleFlipChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFlip(event.target.checked)\n    }\n    const handleDeviceChange = (\n        ev: SelectChangeEvent<string>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => setDeviceId(ev.target.value)\n    const handleFullScreen = () => videoRef.current?.requestFullscreen()\n    const stop = () => {\n        const stream = streamRef.current\n        if (stream) {\n            console.debug(`webcam: stop`)\n            try {\n                const tracks = stream.getTracks()\n                if (tracks) tracks.forEach(track => track.stop())\n            } catch (e) {\n                console.debug(e)\n            }\n            streamRef.current = undefined\n        }\n        const video = videoRef.current\n        if (video) {\n            try {\n                video.srcObject = undefined\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n    }\n\n    // start camera\n    useEffectAsync(async () => {\n        stop()\n\n        console.debug(`webcam: start '${deviceId || \"?\"}'`)\n        try {\n            setWorking(true)\n            stop()\n            const filter: any | MediaStreamConstraints = {\n                video: {\n                    width: { ideal: 1920 },\n                    height: { ideal: 1080 },\n                    focusMode: \"manual\",\n                    exposureMode: \"manual\",\n                    whiteBalanceMode: \"manual\",\n                },\n                audio: false,\n            }\n            if (deviceId)\n                (filter.video as MediaTrackConstraints).advanced = [\n                    { deviceId: deviceId },\n                ]\n\n            const stream = await navigator.mediaDevices.getUserMedia(filter)\n            // const track = stream.getVideoTracks()[0]\n            // console.log({\n            //     capabilities: track.getCapabilities(),\n            //     constraints: track.getConstraints(),\n            //     settings: track.getSettings(),\n            // })\n            streamRef.current = stream\n            const video = videoRef.current\n            video.srcObject = stream\n            await video.play()\n\n            console.debug(`webcam: play started`)\n        } catch (e) {\n            console.debug(`webcam: play failed`)\n            console.error(e)\n            setSettingsOpen(true)\n        } finally {\n            setWorking(false)\n        }\n    }, [deviceId])\n\n    const updateDevices = async () => {\n        console.debug(`webcam: update devices`)\n        try {\n            // enumerate devices\n            const devices = await navigator.mediaDevices.enumerateDevices()\n            const webcams = devices.filter(\n                device => device.kind == \"videoinput\"\n            )\n            if (mounted()) setDevices(webcams)\n        } catch (e) {\n            console.debug(e)\n            if (mounted()) setDevices([])\n        }\n    }\n\n    useEffectAsync(async () => {\n        if (settingsOpen) await updateDevices()\n    }, [settingsOpen])\n\n    useEffect(() => {\n        navigator.mediaDevices.addEventListener(\"devicechange\", updateDevices)\n        return () =>\n            navigator.mediaDevices.removeEventListener(\n                \"devicechange\",\n                updateDevices\n            )\n    })\n\n    // cleanup\n    useEffect(() => stop, [])\n\n    const style: CSSProperties = {\n        transform: flip ? \"rotate(180deg)\" : undefined,\n    }\n\n    return (\n        <DraggableCard\n            onClose={handleClose}\n            title={\n                settingsOpen && (\n                    <Grid container spacing={1}>\n                        {devices && (\n                            <Grid item>\n                                <FormControl variant=\"outlined\" size=\"small\">\n                                    <Select\n                                        title=\"select a webcam\"\n                                        onChange={handleDeviceChange}\n                                        value={deviceId || \"\"}\n                                        disabled={working}\n                                    >\n                                        {devices?.map(({ deviceId, label }) => (\n                                            <MenuItem\n                                                key={deviceId}\n                                                value={deviceId}\n                                            >\n                                                {label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <FormControlLabel\n                                label=\"rotate 180\"\n                                control={\n                                    <Checkbox\n                                        checked={flip}\n                                        size=\"small\"\n                                        onChange={handleFlipChange}\n                                    />\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                )\n            }\n            actionItems={\n                <>\n                    {supportsMediaRecorder() && (\n                        <Grid item>\n                            <MediaRecorderButton stream={streamRef.current} />\n                        </Grid>\n                    )}\n                    {supportsFullScreen && (\n                        <Grid item>\n                            <IconButtonWithTooltip\n                                size=\"large\"\n                                onClick={handleFullScreen}\n                                title=\"full screen\"\n                                disabled={working}\n                            >\n                                <FullscreenIcon />\n                            </IconButtonWithTooltip>\n                        </Grid>\n                    )}\n                    <Grid item>\n                        <IconButtonWithTooltip\n                            size=\"large\"\n                            onClick={handleSettings}\n                            title=\"Settings\"\n                        >\n                            <VideoSettingsIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </>\n            }\n            alert={\n                working && (\n                    <CardContent>\n                        <Alert severity=\"info\">starting camera...</Alert>\n                    </CardContent>\n                )\n            }\n        >\n            <video\n                autoPlay\n                playsInline\n                ref={videoRef}\n                muted={true}\n                title=\"webcam\"\n                style={style}\n            />\n        </DraggableCard>\n    )\n}\n"],"names":["downloadBlob","url","URL","console","downloadUrl","window","useState","recorderRef","useRef","startRecording","chunks","options","mimeType","recorder","e","data","download","blob","type","setRecording","stopRecording","useEffect","recording","useContext","useLocalStorage","streamRef","videoRef","mounted","useMounted","supportsFullScreen","document","handleClose","setShowWebCam","handleSettings","setSettingsOpen","handleFlipChange","event","setFlip","handleDeviceChange","ev","setDeviceId","handleFullScreen","stop","stream","tracks","track","video","useEffectAsync","deviceId","setWorking","filter","width","ideal","height","focusMode","exposureMode","whiteBalanceMode","audio","navigator","updateDevices","devices","webcams","device","setDevices","style","transform","flip","settingsOpen","supportsMediaRecorder","working"],"sourceRoot":""}