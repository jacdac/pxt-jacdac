{"version":3,"file":"3124-375a60d25aa00921a83c.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/faq/FaqPageList.tsx","webpack://jacdac-docs/./src/components/ui/PageLinkList.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport PageLinkList, { PageQuery, pageQueryToNodes } from \"../ui/PageLinkList\"\n\nexport default function FaqPageList() {\n    const query = useStaticQuery<PageQuery>(graphql`\n        {\n            allMdx(filter: { fields: { slug: { glob: \"/faq/*\" } } }) {\n                nodes {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        description\n                        order\n                    }\n                }\n            }\n        }\n    `)\n\n    return <PageLinkList nodes={pageQueryToNodes(query)} />\n}\n","import {\n    Chip,\n    List,\n    ListItem,\n    ListItemText,\n    ListProps,\n    Typography,\n} from \"@mui/material\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport React, { ReactNode, useMemo } from \"react\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport ChipList from \"./ChipList\"\n\nexport interface PageLinkListItemProps {\n    slug?: string\n    href?: string\n    title: string\n    description?: string\n    services?: string\n    order?: number\n    date?: string\n}\n\nfunction PageLinkListItem(props: PageLinkListItemProps) {\n    const { slug, href, title, description, services } = props\n    const specs = useMemo(\n        () =>\n            services\n                ?.split(/\\s*,\\s*/gi)\n                .map(serviceSpecificationFromName)\n                .filter(s => !!s),\n        [services]\n    )\n    return (\n        <ListItem key={slug}>\n            <ListItemText\n                primary={\n                    <Link\n                        underline=\"hover\"\n                        color=\"textPrimary\"\n                        rel=\"noopener noreferrer\"\n                        to={slug}\n                        href={href}\n                    >\n                        {title}\n                    </Link>\n                }\n                secondary={\n                    <ChipList>\n                        {description && (\n                            <Typography component=\"span\" variant=\"subtitle1\">\n                                {description}\n                            </Typography>\n                        )}\n                        {specs?.map(({ shortId, name }) => (\n                            <Chip\n                                component=\"span\"\n                                key={shortId}\n                                label={name}\n                                size=\"small\"\n                            />\n                        ))}\n                    </ChipList>\n                }\n            />\n        </ListItem>\n    )\n}\n\nexport type PageQuery = {\n    allMdx: {\n        nodes: {\n            excerpt?: string\n            fields: {\n                slug: string\n            }\n            frontmatter: {\n                title?: string\n                description?: string\n                order?: number\n                date?: string\n            }\n        }[]\n    }\n}\n\nexport function pageQueryToNodes(data: PageQuery) {\n    const nodes = data?.allMdx?.nodes.map(\n        ({ excerpt, frontmatter, fields }) => ({\n            slug: fields?.slug,\n            title: frontmatter?.title,\n            description: frontmatter?.description || excerpt,\n            order: frontmatter.order,\n            date: frontmatter.date,\n        })\n    )\n    return nodes\n}\n\nexport default function PageLinkList(\n    props: {\n        header?: ReactNode\n        nodes: PageLinkListItemProps[]\n    } & ListProps\n) {\n    const { header, nodes, ...rest } = props\n    const sorted = nodes?.sort((l, r) => {\n        const ld = Date.parse(l?.date) || 0\n        const rd = Date.parse(r?.date) || 0\n        const dc = ld - rd\n        if (dc) return dc\n\n        const lo = Number(l?.order) || 50\n        const ro = Number(r?.order) || 50\n        const c = lo - ro\n        if (c) return c\n        return (l.slug || l.href).localeCompare(r.slug || r.href)\n    })\n    return (\n        !!sorted?.length && (\n            <>\n                {header}\n                <List {...rest}>\n                    {sorted?.map(node => (\n                        <PageLinkListItem\n                            key={node.slug || node.href}\n                            {...node}\n                        />\n                    ))}\n                </List>\n            </>\n        )\n    )\n}\n"],"names":["query","useStaticQuery","pageQueryToNodes","specs","useMemo","services","s","description","nodes","data","slug","fields","title","frontmatter","order","date","rest","sorted","ld","Date","l","rd","r","dc","lo","Number","ro","c","node"],"sourceRoot":""}