{"version":3,"file":"7155-0d6d66452359a9675512.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/material/TableHead/tableHeadClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TableHead/TableHead.js","webpack://jacdac-docs/./node_modules/@mui/material/TableBody/tableBodyClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TableBody/TableBody.js","webpack://jacdac-docs/./node_modules/@mui/material/TableContainer/tableContainerClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/TableContainer/TableContainer.js","webpack://jacdac-docs/./src/components/shell/WebDiagnostics.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n} from \"@mui/material\"\nimport React, { useContext, useState } from \"react\"\nimport {\n    NEW_LISTENER,\n    REMOVE_LISTENER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDNode } from \"../../../jacdac-ts/src/jdom/node\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport PaperBox from \"../ui/PaperBox\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\"\nimport Alert from \"../ui/Alert\"\nimport { AlertTitle } from \"@mui/material\"\n\nfunction visitNodes(node: JDNode, vis: (node: JDNode) => void) {\n    const todo = [node]\n    while (todo.length) {\n        const node = todo.pop()\n        vis(node)\n        node.children.forEach(child => todo.push(child))\n    }\n}\n\nfunction NodeCallRow(props: { node: JDNode }) {\n    const { node } = props\n    const emitStats = node.eventStats\n    const newListenerStats = node.newListenerStats || {}\n    const events = Object.keys(emitStats)\n        .filter(ev => emitStats[ev] || newListenerStats[ev])\n        .sort((l, r) => -emitStats[l] + emitStats[r])\n    const emitTotal = events\n        .filter(ev => ev !== REMOVE_LISTENER && ev !== NEW_LISTENER)\n        .map(ev => emitStats[ev] | 0)\n        .reduce((prev, curr) => prev + curr, 0)\n    const newListenerTotal = events\n        .map(ev => newListenerStats[ev] | 0)\n        .reduce((prev, curr) => prev + curr, 0)\n\n    if (emitTotal == 0) return null\n\n    return (\n        <>\n            <TableHead>\n                <TableRow>\n                    <TableCell>{node.id}</TableCell>\n                    <TableCell>{emitTotal}</TableCell>\n                    <TableCell>{newListenerTotal}</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {events.map(ev => (\n                    <TableRow key={`event:${ev}`}>\n                        <TableCell>{ev}</TableCell>\n                        <TableCell>{emitStats[ev] || 0}</TableCell>\n                        <TableCell>{newListenerStats[ev] || 0}</TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </>\n    )\n}\n\nfunction NodeCalls() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const nodes: Record<string, JDNode> = {}\n    visitNodes(bus, n => (nodes[n.id] = n))\n\n    return (\n        <PaperBox key=\"slots\">\n            <TableContainer>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>node</TableCell>\n                            <TableCell>calls</TableCell>\n                            <TableCell>new listener</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    {Object.values(nodes).map(node => (\n                        <NodeCallRow key={`calls:${node.id}`} node={node} />\n                    ))}\n                </Table>\n            </TableContainer>\n        </PaperBox>\n    )\n}\n\nfunction NodeListenerRow(props: { node: JDNode }) {\n    const { node } = props\n    const eventNames = node\n        .eventNames()\n        .filter(ev => node.listenerCount(ev))\n        .sort((l, r) => -node.listenerCount(l) + node.listenerCount(r))\n    const counts = eventNames.map(ev => node.listenerCount(ev))\n    const total = counts.reduce((p, c) => p + c, 0)\n\n    const handleClick = (ev: string) => () => {\n        const stackTraces = node.listenerStackTraces(ev)\n        stackTraces.forEach(st => console.log(st))\n    }\n\n    if (total == 0) return null\n\n    return (\n        <>\n            <TableHead>\n                <TableRow>\n                    <TableCell valign=\"top\">{node.id}</TableCell>\n                    <TableCell valign=\"top\">{total}</TableCell>\n                    <TableCell />\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {eventNames.map((ev, i) => (\n                    <TableRow key={`listener:${ev}`}>\n                        <TableCell>{ev}</TableCell>\n                        <TableCell>{counts[i]}</TableCell>\n                        <TableCell>\n                            <Button size=\"small\" onClick={handleClick(ev)}>\n                                traces\n                            </Button>\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </>\n    )\n}\n\nfunction NodeListeners() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const nodes: Record<string, JDNode> = {}\n    visitNodes(bus, n => (nodes[n.id] = n))\n\n    return (\n        <PaperBox key=\"slots\">\n            <TableContainer>\n                <Table size=\"small\">\n                    {Object.values(nodes).map(node => (\n                        <NodeListenerRow key={`node:${node.id}`} node={node} />\n                    ))}\n                </Table>\n            </TableContainer>\n        </PaperBox>\n    )\n}\n\nexport default function WebDiagnostics() {\n    const [expanded, setExpanded] = React.useState<string | false>(false)\n    const [v, setV] = useState(0)\n    const handleRefresh = () => {\n        setV(v + 1)\n    }\n\n    const handleChange =\n        (panel: string) =>\n        (event: React.ChangeEvent<unknown>, isExpanded: boolean) => {\n            setExpanded(isExpanded ? panel : false)\n        }\n\n    return (\n        <Alert severity=\"info\">\n            <AlertTitle>\n                Diagnostics{\" \"}\n                <Button variant=\"outlined\" onClick={handleRefresh}>\n                    refresh\n                </Button>\n            </AlertTitle>\n            <p>\n                This diagnostics view does not register events to refresh\n                automatically. Click the button above to refresh data.\n            </p>\n            <Accordion\n                expanded={expanded === \"listeners\"}\n                onChange={handleChange(\"listeners\")}\n            >\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    Event Listeners\n                </AccordionSummary>\n                <AccordionDetails>\n                    <NodeListeners />\n                </AccordionDetails>\n            </Accordion>\n            <Accordion\n                expanded={expanded === \"calls\"}\n                onChange={handleChange(\"calls\")}\n            >\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    Event Calls\n                </AccordionSummary>\n                <AccordionDetails>\n                    <NodeCalls />\n                </AccordionDetails>\n            </Accordion>\n        </Alert>\n    )\n}\n"],"names":["todo","node","vis","child","emitStats","newListenerStats","events","Object","ev","emitTotal","prev","newListenerTotal","useContext","nodes","visitNodes","n","eventNames","counts","total","p","handleClick","stackTraces","st","console","React","useState","handleRefresh","setV","v","handleChange","panel","setExpanded","isExpanded","expanded"],"sourceRoot":""}