{"version":3,"file":"component---src-pages-start-mdx-4f42b928715b350a7446.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA,aAAa,2BAA2B;AACxC,aAAa,mCAAmC;AAChD;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA,cAAc,SAAS;AACvB;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,aAAa;AACb;AACA;;AAEyB;;AAEzB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,mBAAmB,mBAAmB,GAAG;;AAEhD;AACA,WAAW,oCAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA,aAAa,2BAA2B,0BAA0B;AAClE,eAAe;AACf;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;;AAEA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA,aAAa;AACb;AACA;AACO;AACP,4BAA4B,gBAAgB;AAC5C;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;;AAEA,YAAY;AACZ,GAAG;AACH;;AAEA,WAAW,YAAY;AACvB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO,sBAAsB,2CAA2C;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK,qBAAqB;AAC1B;AACA;AACA;;;ACnGA;AACA;AACA;;AACA,SAASG,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc;AAChCC,IAAAA,EAAE,EAAE,IAD4B;AAEhCC,IAAAA,CAAC,EAAE,GAF6B;AAGhCC,IAAAA,GAAG,EAAE;AAH2B,GAAd,EAIjBT,gBAAkB,EAJD,EAIKG,KAAK,CAACO,UAJX,CAApB;;AAKA,sBAAOT,mBAAA,CAAoBG,WAAW,CAACG,EAAhC,EAAoC;AACzCK,IAAAA,EAAE,EAAE,OADqC;AAEzCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AAFkC,GAApC,eAKJb,mBAAA,CAAoBG,WAAW,CAACI,CAAhC,EAAmC;AACpCO,IAAAA,IAAI,EAAE,QAD8B;AAEpC,kBAAc,iBAFsB;AAGpCC,IAAAA,SAAS,EAAE;AAHyB,GAAnC,eAIAf,mBAAA,CAAoBG,WAAW,CAACK,GAAhC,EAAqC;AACtCQ,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,MAAM,EAAE;AADe;AADa,GAArC,CAJA,CALI,EAaF,OAbE,CAAP;AAcD;;AACD,SAASC,UAAT,CAAoBhB,KAApB,EAAgC;AAAA,MAAZA,KAAY;AAAZA,IAAAA,KAAY,GAAJ,EAAI;AAAA;;AAC9B,MAAM;AAACiB,IAAAA,OAAO,EAAEC;AAAV,MAAuBhB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,gBAAkB,EAApC,EAAwCG,KAAK,CAACO,UAA9C,CAA7B;AACA,SAAOW,SAAS,gBAAGpB,mBAAA,CAAoBoB,SAApB,EAA+BlB,KAA/B,eAAsCF,mBAAA,CAAoBC,iBAApB,EAAuCC,KAAvC,CAAtC,CAAH,GAA0FD,iBAAiB,CAACC,KAAD,CAA3H;AACD;;AACD,0CAAegB,UAAf","sources":["webpack://jacdac-docs/./node_modules/@mdx-js/react/lib/index.js","webpack://jacdac-docs/./src/pages/start.mdx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.h1, {\n    id: \"start\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#start\",\n    \"aria-label\": \"start permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"start\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["useMDXComponents","_provideComponents","React","_createMdxContent","props","_components","Object","assign","h1","a","div","components","createElement","id","style","position","href","className","dangerouslySetInnerHTML","__html","MDXContent","wrapper","MDXLayout"],"sourceRoot":""}