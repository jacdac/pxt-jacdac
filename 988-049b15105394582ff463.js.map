{"version":3,"file":"988-049b15105394582ff463.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAaA,GAAMA,CAAAA,CAAC,CAAP,EACA,GAAMC,CAAAA,CAAC,CAAP,EACA,GAAMC,CAAAA,EAAE,CAAR,EACA,GAAMC,CAAAA,CAAC,CAAG,IAAQ,EAAlB,EACA,GAAMC,CAAAA,CAAC,CAAG,IAAQ,EAAlB,EACA,GAAMC,CAAAA,EAAE,CAAGF,CAAC,CAAZ,EACA,GAAMG,CAAAA,EAAE,CAAR,EAEA,4BAOG,CACC,GAAM,qCAAN,MACA,GAAMC,CAAAA,WAAW,CAAGC,6EAAiB,OAArC,MAAqC,CAArC,CAEA,mBACI,+GACI,2DAAQ,EAAE,CAAV,GAAgB,EAAE,CAAlB,GAAwB,CAAC,CAAzB,EAA8B,IAAI,CAAlC,WAAgD,MAAM,CAD1D,MACI,EADJ,cAEI,yEACI,EAAE,CADN,GAEI,EAAE,CAFN,GAGI,CAAC,CAHL,GAII,IAAI,CAJR,KAKI,WAAW,CALf,IAHR,WAGQ,EAFJ,CADJ,CAeJ,CAAe,qCAA6D,CACxE,GAAM,2BAAN,MAEA,GAAMC,CAAAA,SAAS,CAAGC,6CAAlB,GAEA,GAAMC,CAAAA,WAAW,CAAGC,uEAAW,SAAUC,6FAAV,CAA/B,CACA,GAAMC,CAAAA,cAAc,CAAGF,uEAAW,SAAUC,mGAAV,CAAlC,CACA,GAAME,CAAAA,aAAa,CAAGH,uEAAW,SAAUC,iGAAV,CAAjC,CAEA,GAAMG,CAAAA,GAAG,CAAGC,wFAAoB,aAAhC,KAAgC,CAAhC,CACA,GAAMC,CAAAA,MAAM,CAAGD,wFAAoB,gBAAnC,KAAmC,CAAnC,CACA,GAAME,CAAAA,KAAK,CAAGF,wFAAoB,eAAlC,KAAkC,CAAlC,CAEA,GAAMG,CAAAA,SAAS,CAAG,CACdP,6FADc,CAEdA,mGAFc,CAGdA,iGAHc,CAAlB,CAKA,GAAMQ,CAAAA,MAAM,CAAG,YAAf,KAAe,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAGC,4EAAgB,CAA/B,OAA+B,CAA/B,CACA,GAAMC,CAAAA,KAAK,CAAGF,MAAM,aAApB,UACA,GAAM,+BAAoCG,4EAAc,CAAxD,KAAwD,CAAxD,CACA,GAAMC,CAAAA,UAAU,CAAGC,2EAAa,SAAUC,QAAV,OAAUA,EAAAA,QAAV,SAAUA,CAAV,MAAUA,CAAAA,QAAQ,CAAlD,MAAgC,CAAhC,CAEA,GAAIC,CAAAA,EAAE,CAAN,EACA,GAAMC,CAAAA,KAAK,CAAG,gBAAd,OAAc,CAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,gBAAf,OAAe,CAAf,CACA,GAAMC,CAAAA,QAAQ,CAAGC,sFAA0B,CAACxB,SAAS,CAArD,OAA2C,CAA3C,CACA,mBACI,sHAAW,KAAK,CAAhB,EAAqB,MAAM,CAA3B,EAAgC,IAAI,CAApC,yBACI,oEAAG,GAAG,CAAN,kCACI,yDACI,CAAC,CADL,EAEI,CAAC,CAFL,EAGI,KAAK,CAHT,EAII,MAAM,CAJV,EAKI,EAAE,CALN,EAMI,IAAI,CAPZ,UACI,EADJ,CASKY,MAAM,CAANA,GAAAA,CAAW,OAAU,CAClBQ,EAAE,EAAI7B,CAAC,CAAG,EAAV6B,CAAAA,CACA,GAAMK,CAAAA,IAAI,CAAGC,CAAC,CAAGJ,MAAM,CAAT,CAAS,CAAT,CAAd,kBACA,GAAMK,CAAAA,MAAM,oIAAG,WAAY,CACvB,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAAPA,QAAAA,CAAiBlB,SAAS,CAAtC,CAAsC,CAA1BkB,CAAZ,CACA,KAAMD,CAAAA,GAAG,CAAHA,gBAAAA,CAAqB,CAArBA,CAAAA,CAAN,IAAMA,CAAN,CAFQ,SAAND,SAAAA,CAAAA,MAAAA,EAAM,qCAAZ,CAAY,EAAZ,CAIA,mBACI,+DACI,GAAG,CADP,EAEI,EAAE,CAFN,GAGI,EAAE,CAHN,GAII,UAAU,CAJd,WAKI,IAAI,CALR,KAMI,MAAM,CANV,OAOI,KAAK,CAAKN,KAAK,CAAV,CAAU,CAALA,CAAL,GAAKA,EAAYK,CAAC,MAR/B,KAQkBL,CAPd,EADJ,CAlBhB,CAWaT,CATL,CADJ,CADJ,CAiCH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardTrafficLight.tsx"],"sourcesContent":["import React, { useRef } from \"react\"\nimport { TrafficLightReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useSvgButtonProps from \"../hooks/useSvgButtonProps\"\nimport { TrafficLightServer } from \"../../../jacdac-ts/src/servers/trafficlightserver\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport useRegister from \"../hooks/useRegister\"\n\nconst m = 2\nconst r = 8\nconst ri = 7\nconst w = 2 * r + 2 * m\nconst h = 4 * w + 2 * m\nconst cx = w / 2\nconst sw = 2\n\nfunction TrafficLight(props: {\n    cx: number\n    cy: number\n    label: string\n    background: string\n    fill: string\n    onDown?: () => void\n}) {\n    const { cx, cy, fill, background, label, onDown } = props\n    const buttonProps = useSvgButtonProps<SVGCircleElement>(label, onDown)\n\n    return (\n        <>\n            <circle cx={cx} cy={cy} r={r} fill={background} stroke={\"none\"} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={ri}\n                fill={fill}\n                strokeWidth={sw}\n                {...buttonProps}\n            />\n        </>\n    )\n}\n\nexport default function DashboardTrafficLight(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n\n    const widgetRef = useRef<SVGGElement>()\n\n    const redRegister = useRegister(service, TrafficLightReg.Red)\n    const yellowRegister = useRegister(service, TrafficLightReg.Yellow)\n    const greenRegister = useRegister(service, TrafficLightReg.Green)\n\n    const red = useRegisterBoolValue(redRegister, props)\n    const yellow = useRegisterBoolValue(yellowRegister, props)\n    const green = useRegisterBoolValue(greenRegister, props)\n\n    const lightRegs = [\n        TrafficLightReg.Red,\n        TrafficLightReg.Yellow,\n        TrafficLightReg.Green,\n    ]\n    const lights = [red, yellow, green]\n\n    const server = useServiceServer<TrafficLightServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { background, controlBackground } = useWidgetTheme(color)\n    const widgetSize = useWidgetSize(variant, services?.length)\n\n    let cy = 0\n    const names = [\"red\", \"yellow\", \"green\"]\n    const colors = [\"red\", \"orange\", \"green\"]\n    const navProps = useKeyboardNavigationProps(widgetRef.current)\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <g ref={widgetRef} {...navProps}>\n                <rect\n                    x={0}\n                    y={0}\n                    width={w}\n                    height={h}\n                    rx={m}\n                    fill={background}\n                />\n                {lights.map((v, i) => {\n                    cy += m + 2 * r\n                    const fill = v ? colors[i] : controlBackground\n                    const onDown = async () => {\n                        const reg = service.register(lightRegs[i])\n                        await reg.sendSetBoolAsync(!v, true)\n                    }\n                    return (\n                        <TrafficLight\n                            key={i}\n                            cx={cx}\n                            cy={cy}\n                            background={background}\n                            fill={fill}\n                            onDown={onDown}\n                            label={`${names[i]} ${v ? \"on\" : \"off\"}`}\n                        />\n                    )\n                })}\n            </g>\n        </SvgWidget>\n    )\n}\n"],"names":["m","r","ri","w","h","cx","sw","buttonProps","useSvgButtonProps","widgetRef","useRef","redRegister","useRegister","TrafficLightReg","yellowRegister","greenRegister","red","useRegisterBoolValue","yellow","green","lightRegs","lights","server","useServiceServer","color","useWidgetTheme","widgetSize","useWidgetSize","services","cy","names","colors","navProps","useKeyboardNavigationProps","fill","v","onDown","reg","service"],"sourceRoot":""}