{"version":3,"file":"5235-f949a35b3bc5ef6224e7.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/enclosure/ec30.ts","webpack://jacdac-docs/./src/components/specification/DeviceSpecificationCard.tsx","webpack://jacdac-docs/./src/components/specification/DeviceSpecificationList.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx"],"sourcesContent":["import type {\n    EnclosureModel,\n    EnclosureOptions,\n} from \"../../workers/cad/dist/node_modules/enclosurecad\"\n\nexport const DEFAULT_OPTIONS: EnclosureOptions = {\n    legs: {\n        type: \"well\",\n    },\n    cover: {},\n}\n\nexport function isEC30(shape: jdspec.Shape) {\n    return typeof shape === \"string\" && /^ec30_/.test(shape)\n}\n\nexport function toEC30(gridWidth: number, gridHeight: number, connectors = \"\") {\n    return `ec30_${gridWidth}x${gridHeight}_${connectors}`\n}\n\nexport function generateEC30EnclosureModel(\n    gridWidth: number,\n    gridHeight: number,\n    connectors = \"\",\n    depth = 6\n): EnclosureModel {\n    const width = gridWidth * 10\n    const height = gridHeight * 10\n    const c = 8\n    const boxWidth = width + c\n    const boxHeight = height + c\n    return {\n        name: `${width}x${height}`,\n        grid: {\n            width: gridWidth,\n            height: gridHeight,\n            connectors,\n        },\n        box: {\n            width: boxWidth,\n            height: boxHeight,\n            depth,\n        },\n        rings: [\n            {\n                x: width >> 1,\n                y: height >> 1,\n            },\n            {\n                x: width >> 1,\n                y: -(height >> 1),\n            },\n            {\n                x: -(width >> 1),\n                y: -(height >> 1),\n            },\n            {\n                x: -(width >> 1),\n                y: height >> 1,\n            },\n        ],\n        components: [\n            {\n                x: -(width >> 1) + 1.5,\n                y: 0,\n                type: \"led\",\n            },\n            {\n                x: (width >> 1) - 1.5,\n                y: 0,\n                type: \"led\",\n            },\n            {\n                x: 0,\n                y: -(height >> 1) + 1.5,\n                type: \"led\",\n            },\n            {\n                x: 0,\n                y: (height >> 1) - 1.5,\n                type: \"led\",\n            },\n        ],\n        connectors: [\n            {\n                x: 0,\n                y: -(width >> 1) + 2,\n                dir: \"bottom\",\n                type: \"jacdac\",\n            },\n            {\n                x: 0,\n                y: (width >> 1) - 2,\n                dir: \"top\",\n                type: \"jacdac\",\n            },\n            {\n                x: -(width >> 1) + 2,\n                y: 0,\n                dir: \"left\",\n                type: \"jacdac\",\n            },\n            {\n                x: (width >> 1) - 2,\n                y: 0,\n                dir: \"right\",\n                type: \"jacdac\",\n            },\n        ],\n    }\n}\n\nexport function shapeToEC30(shape: jdspec.Shape, depth = 7) {\n    if (typeof shape === \"string\") {\n        const m = /^ec30_(\\d+)x(\\d+)_([lrup\\d]+)$/.exec(shape)\n        if (m) {\n            const w = Number(m[1])\n            const h = Number(m[2])\n            const c = m[3]\n            return generateEC30EnclosureModel(w, h, c, depth)\n        }\n    }\n    return undefined\n}\n","import React from \"react\"\nimport { Card, CardContent, Chip, Typography } from \"@mui/material\"\nimport {\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { CardActionArea } from \"gatsby-theme-material-ui\"\nimport { uniqueMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDeviceImage from \"../devices/useDeviceImage\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ChipList from \"../ui/ChipList\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/catalog\"\n\nexport default function DeviceSpecificationCard(props: {\n    specification: jdspec.DeviceSpec\n    size: \"list\" | \"preview\" | \"catalog\"\n    onClick?: () => void\n    hideChips?: boolean\n    hideServices?: boolean\n}) {\n    const { specification, size, onClick, hideChips, hideServices } = props\n    const {\n        id,\n        name,\n        version,\n        company,\n        services,\n        hardwareDesign,\n        firmwareSource,\n        storeLink,\n        makeCodeRepo,\n        tags,\n    } = specification\n    const imageUrl = useDeviceImage(specification, size)\n    const names = [\n        tags?.indexOf(\"kit\") > -1 ? \"kit\" : undefined,\n        tags?.indexOf(\"hub\") > -1 ? \"hub\" : undefined,\n        tags?.indexOf(\"adapter\") > -1 ? \"adapter\" : undefined,\n        ...uniqueMap(\n            services || [],\n            srv => srv + \"\",\n            srv => srv\n        ).map(sc =>\n            humanify(\n                serviceSpecificationFromClassIdentifier(\n                    sc\n                )?.shortName.toLowerCase()\n            )\n        ),\n    ]\n        .filter(s => !!s)\n        .join(\", \")\n    const to = onClick ? undefined : `/devices/${identifierToUrlPath(id)}`\n\n    return (\n        <Card raised>\n            <CardActionArea to={to} onClick={onClick}>\n                <img\n                    src={imageUrl}\n                    style={{ aspectRatio: \"4 / 3\", width: \"100%\" }}\n                    alt={`photograph of ${specification.name}`}\n                    loading=\"lazy\"\n                />\n                <CardContent>\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                        {company}\n                    </Typography>\n                    <Typography\n                        gutterBottom\n                        variant=\"subtitle1\"\n                        component=\"div\"\n                    >\n                        {name}\n                        {version && (\n                            <Typography\n                                sx={{ ml: 1 }}\n                                variant=\"caption\"\n                                component=\"span\"\n                            >\n                                v{version}\n                            </Typography>\n                        )}\n                    </Typography>\n                    {!hideServices && names && (\n                        <Typography component=\"div\" variant=\"subtitle2\">\n                            {names}\n                        </Typography>\n                    )}\n                    {!hideChips && (\n                        <ChipList>\n                            {!storeLink && (\n                                <Chip size=\"small\" label=\"prototype\" />\n                            )}\n                            {!!makeCodeRepo?.length && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"MakeCode\"\n                                    title=\"MakeCode extension available.\"\n                                />\n                            )}\n                            {firmwareSource && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"firmware code\"\n                                    title=\"Firmware source is avaiable.\"\n                                />\n                            )}\n                            {hardwareDesign && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"hardware design\"\n                                    title=\"Hardware design files available.\"\n                                />\n                            )}\n                        </ChipList>\n                    )}\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n","import React, { ReactNode, useMemo } from \"react\"\nimport { Grid, SxProps, Theme } from \"@mui/material\"\nimport { escapeDeviceIdentifier } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport { serviceName as renderServiceName } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport DeviceSpecificationCard from \"./DeviceSpecificationCard\"\nimport { isEC30 } from \"../enclosure/ec30\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport GridHeader from \"../ui/GridHeader\"\n\nexport default function DeviceSpecificationList(props: {\n    sx?: SxProps<Theme>\n    header?: ReactNode\n    query?: string\n    count?: number\n    company?: string\n    serviceClass?: number\n    serviceName?: string\n    devices?: jdspec.DeviceSpec[]\n    ids?: string[]\n    updates?: boolean\n    buyNow?: boolean\n    makeCode?: boolean | string\n    firmwareSources?: boolean\n    hardwareDesign?: boolean\n    transports?: jdspec.TransportType[]\n    tags?: string[]\n    ec30?: boolean\n    connector?: \"jacdac\" | \"grove\" | \"none\"\n    shapes?: jdspec.ShapeWellKnown[]\n    onDeviceClick?: (device: jdspec.DeviceSpec) => void\n    hideChips?: boolean\n    hideServices?: boolean\n}) {\n    const {\n        sx,\n        header,\n        query,\n        count,\n        serviceClass,\n        serviceName,\n        company,\n        devices,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports,\n        tags,\n        ec30,\n        connector,\n        shapes,\n        ids,\n        onDeviceClick,\n        hideChips,\n        hideServices,\n    } = props\n    const specifications = useDeviceSpecifications({\n        includeExperimental: !buyNow,\n    })\n    const specs = useMemo(() => {\n        let r = (devices || specifications).slice(0)\n        if (ids?.length) r = r.filter(({ id }) => ids.indexOf(id) > -1)\n        if (company) {\n            const lc = escapeDeviceIdentifier(company)\n            r = r.filter(spec =>\n                escapeDeviceIdentifier(spec.company).startsWith(lc)\n            )\n        }\n        if (!isNaN(serviceClass))\n            r = r.filter(spec => spec.services?.indexOf(serviceClass) > -1)\n        if (serviceName) {\n            const si = serviceSpecificationFromName(serviceName)\n            if (si)\n                r = r.filter(\n                    spec => spec.services?.indexOf(si.classIdentifier) > -1\n                )\n        }\n        if (updates) r = r.filter(spec => spec.repo)\n        if (buyNow !== undefined)\n            r = r.filter(spec => !!spec.storeLink === buyNow)\n        if (hardwareDesign) r = r.filter(spec => spec.hardwareDesign)\n        if (connector === \"jacdac\")\n            r = r.filter(\n                spec =>\n                    spec.connector !== \"noConnector\" &&\n                    spec.connector !== \"grove\" &&\n                    spec.connector !== \"qwiic\"\n            )\n        else if (connector === \"grove\")\n            r = r.filter(\n                spec => spec.connector === \"grove\" || spec.connector === \"qwiic\"\n            )\n        else if (connector === \"none\")\n            r = r.filter(\n                spec =>\n                    spec.connector === \"noConnector\" ||\n                    spec.connector === \"edgeIndependent\"\n            )\n\n        if (firmwareSources) r = r.filter(spec => spec.firmwareSource)\n        if (ec30)\n            r = r.filter(\n                spec => isEC30(spec.shape) || spec.tags?.includes(\"ec30\")\n            )\n        if (shapes)\n            r = r.filter(spec => shapes.some(shape => shape === spec.shape))\n        if (typeof makeCode === \"string\")\n            r = r.filter(spec =>\n                spec.makeCodeRepo?.some(r => r.target === makeCode)\n            )\n        else if (makeCode !== undefined)\n            r = r.filter(spec => !!spec.makeCodeRepo?.length === makeCode)\n        if (transports?.length)\n            r = r.filter(spec => transports.indexOf(spec.transport?.type) > -1)\n        if (tags?.length)\n            r = r.filter(spec => tags.every(tag => spec.tags?.includes(tag)))\n        if (query)\n            r = r.filter(spec =>\n                [\n                    spec.name,\n                    spec.description,\n                    spec.company,\n                    ...(spec.productIdentifiers || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(srv => renderServiceName(srv)),\n                ].some(s => s?.toLowerCase()?.indexOf(query.toLowerCase()) > -1)\n            )\n        r = r.sort((a, b) => {\n            // kits first\n            let c =\n                -(a.tags?.indexOf(\"kit\") > -1 ? 1 : 0) +\n                (b.tags?.indexOf(\"kit\") > -1 ? 1 : 0)\n            if (c) return c\n            // device with transports\n            c = -(a.transport ? 1 : 0) + (b.transport ? 1 : 0)\n            if (c) return c\n            // use ec30 shape\n            c = -(isEC30(a.shape) ? 1 : 0) + (isEC30(b.shape) ? 1 : 0)\n            if (c) return c\n            // with connectors first\n            c =\n                -(a.connector === \"noConnector\" ||\n                a.connector === \"edgePassive\" ||\n                a.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0) +\n                (b.connector === \"noConnector\" ||\n                b.connector === \"edgePassive\" ||\n                b.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0)\n            if (c) return c\n\n            // by order\n            c = (a.order || 50) - (b.order || 50)\n            if (c) return c\n            // by name\n            return a.name.localeCompare(b.name)\n        })\n        if (count !== undefined) r = r.slice(0, count)\n        return r\n    }, [\n        query,\n        serviceClass,\n        serviceName,\n        count,\n        company,\n        JSON.stringify(devices?.map(d => d.id)),\n        specifications,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports?.join(\",\"),\n        tags?.join(\",\"),\n        ec30,\n        connector,\n        shapes?.join(\",\"),\n        ids?.join(\",\"),\n    ])\n    const gridBreakpoints = useGridBreakpoints(specs.length)\n    const size = specs?.length < 6 ? \"catalog\" : \"preview\"\n\n    if (!specs.length) return null\n\n    return (\n        <Grid sx={sx} container spacing={3}>\n            {header && <GridHeader title={header} />}\n            {specs.map(specification => (\n                <Grid key={specification.id} item {...gridBreakpoints}>\n                    <DeviceSpecificationCard\n                        specification={specification}\n                        size={size}\n                        onClick={\n                            onDeviceClick\n                                ? () => onDeviceClick(specification)\n                                : undefined\n                        }\n                        hideChips={hideChips}\n                        hideServices={hideServices}\n                    />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React, { ReactNode } from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}hr`,\n    start: `${PREFIX}start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: ReactNode\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n"],"names":["DEFAULT_OPTIONS","legs","type","cover","connectors","depth","width","gridWidth","height","gridHeight","c","boxWidth","boxHeight","name","grid","box","rings","x","y","components","dir","m","w","Number","h","generateEC30EnclosureModel","imageUrl","useDeviceImage","names","uniqueMap","services","srv","sc","humanify","serviceSpecificationFromClassIdentifier","s","to","onClick","identifierToUrlPath","aspectRatio","specification","version","ml","makeCodeRepo","firmwareSource","hardwareDesign","serviceName","specifications","useDeviceSpecifications","includeExperimental","specs","useMemo","r","devices","ids","lc","escapeDeviceIdentifier","spec","isNaN","si","serviceSpecificationFromName","buyNow","connector","isEC30","shapes","shape","makeCode","transports","tags","tag","p","renderServiceName","query","a","b","count","JSON","d","gridBreakpoints","useGridBreakpoints","size","header","onDeviceClick","PREFIX","classes","hr","start","StyledGrid","styled","background","theme","marginBottom","clsx","action","variant"],"sourceRoot":""}