{"version":3,"file":"2217-4f97878a0c5dbe84943a.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/makecode/MakeCodeProjectFooter.tsx","webpack://jacdac-docs/./src/components/specification/DeviceSpecificationCard.tsx","webpack://jacdac-docs/./src/components/specification/DeviceSpecificationList.tsx"],"sourcesContent":["import { Link } from \"gatsby-theme-material-ui\"\nimport React, { Fragment } from \"react\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport DeviceSpecificationList from \"../specification/DeviceSpecificationList\"\nimport PageLinkList from \"../ui/PageLinkList\"\n\nexport default function MakeCodeProjectFooter(props: { serviceNames: string }) {\n    const { serviceNames = \"\" } = props\n    const names = serviceNames.split(/\\s*,\\s*/gi)\n    return (\n        <>\n            <PageLinkList\n                header={<h2 id=\"extensions\">Extensions</h2>}\n                nodes={names\n                    .map(serviceName =>\n                        serviceSpecificationFromName(serviceName)\n                    )\n                    .map(spec => ({\n                        slug: `/clients/makecode/extensions/${spec.shortId}/`,\n                        title: spec.name,\n                        description: spec.notes[\"short\"],\n                        services: spec.shortId,\n                    }))}\n            />{\" \"}\n            <h2 id=\"devices\">Devices</h2>\n            {names.length > 1 ? (\n                names.map(name => (\n                    <DeviceSpecificationList\n                        key={name}\n                        header={\n                            <h3>{serviceSpecificationFromName(name).name}</h3>\n                        }\n                        serviceName={name}\n                        buyNow={true}\n                    />\n                ))\n            ) : (\n                <DeviceSpecificationList\n                    key={names[0]}\n                    serviceName={names[0]}\n                    buyNow={true}\n                />\n            )}\n            <h2>See Also</h2>\n            <ul>\n                <li>\n                    <Link to={`/clients/makecode/user-guide/`}>User guide</Link>\n                </li>\n            </ul>\n        </>\n    )\n}\n","import React from \"react\"\nimport { Card, CardContent, Chip, Typography } from \"@mui/material\"\nimport {\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport { CardActionArea } from \"gatsby-theme-material-ui\"\nimport { uniqueMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDeviceImage from \"../devices/useDeviceImage\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ChipList from \"../ui/ChipList\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/catalog\"\n\nexport default function DeviceSpecificationCard(props: {\n    specification: jdspec.DeviceSpec\n    size: \"list\" | \"preview\" | \"catalog\"\n    onClick?: () => void\n    hideChips?: boolean\n    hideServices?: boolean\n}) {\n    const { specification, size, onClick, hideChips, hideServices } = props\n    const {\n        id,\n        name,\n        version,\n        company,\n        services,\n        hardwareDesign,\n        firmwareSource,\n        storeLink,\n        makeCodeRepo,\n        tags,\n    } = specification\n    const imageUrl = useDeviceImage(specification, size)\n    const names = [\n        tags?.indexOf(\"kit\") > -1 ? \"kit\" : undefined,\n        tags?.indexOf(\"hub\") > -1 ? \"hub\" : undefined,\n        tags?.indexOf(\"adapter\") > -1 ? \"adapter\" : undefined,\n        ...uniqueMap(\n            services || [],\n            srv => srv + \"\",\n            srv => srv\n        ).map(sc =>\n            humanify(\n                serviceSpecificationFromClassIdentifier(\n                    sc\n                )?.shortName.toLowerCase()\n            )\n        ),\n    ]\n        .filter(s => !!s)\n        .join(\", \")\n    const to = onClick ? undefined : `/devices/${identifierToUrlPath(id)}`\n\n    return (\n        <Card raised>\n            <CardActionArea to={to} onClick={onClick}>\n                <img\n                    src={imageUrl}\n                    style={{ aspectRatio: \"4 / 3\", width: \"100%\" }}\n                    alt={`photograph of ${specification.name}`}\n                    loading=\"lazy\"\n                />\n                <CardContent>\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                        {company}\n                    </Typography>\n                    <Typography\n                        gutterBottom\n                        variant=\"subtitle1\"\n                        component=\"div\"\n                    >\n                        {name}\n                        {version && (\n                            <Typography\n                                sx={{ ml: 1 }}\n                                variant=\"caption\"\n                                component=\"span\"\n                            >\n                                v{version}\n                            </Typography>\n                        )}\n                    </Typography>\n                    {!hideServices && names && (\n                        <Typography component=\"div\" variant=\"subtitle2\">\n                            {names}\n                        </Typography>\n                    )}\n                    {!hideChips && (\n                        <ChipList>\n                            {!storeLink && (\n                                <Chip size=\"small\" label=\"prototype\" />\n                            )}\n                            {!!makeCodeRepo?.length && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"MakeCode\"\n                                    title=\"MakeCode extension available.\"\n                                />\n                            )}\n                            {firmwareSource && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"firmware code\"\n                                    title=\"Firmware source is avaiable.\"\n                                />\n                            )}\n                            {hardwareDesign && (\n                                <Chip\n                                    size=\"small\"\n                                    label=\"hardware design\"\n                                    title=\"Hardware design files available.\"\n                                />\n                            )}\n                        </ChipList>\n                    )}\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n","import React, { ReactNode, useMemo } from \"react\"\nimport { Grid, SxProps, Theme } from \"@mui/material\"\nimport { escapeDeviceIdentifier } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport { serviceName as renderServiceName } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport DeviceSpecificationCard from \"./DeviceSpecificationCard\"\nimport { isEC30 } from \"../enclosure/ec30\"\nimport { serviceSpecificationFromName } from \"../../../jacdac-ts/src/jdom/spec\"\nimport GridHeader from \"../ui/GridHeader\"\n\nexport default function DeviceSpecificationList(props: {\n    sx?: SxProps<Theme>\n    header?: ReactNode\n    query?: string\n    count?: number\n    company?: string\n    serviceClass?: number\n    serviceName?: string\n    devices?: jdspec.DeviceSpec[]\n    ids?: string[]\n    updates?: boolean\n    buyNow?: boolean\n    makeCode?: boolean | string\n    firmwareSources?: boolean\n    hardwareDesign?: boolean\n    transports?: jdspec.TransportType[]\n    tags?: string[]\n    ec30?: boolean\n    connector?: \"jacdac\" | \"grove\" | \"none\"\n    shapes?: jdspec.ShapeWellKnown[]\n    onDeviceClick?: (device: jdspec.DeviceSpec) => void\n    hideChips?: boolean\n    hideServices?: boolean\n}) {\n    const {\n        sx,\n        header,\n        query,\n        count,\n        serviceClass,\n        serviceName,\n        company,\n        devices,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports,\n        tags,\n        ec30,\n        connector,\n        shapes,\n        ids,\n        onDeviceClick,\n        hideChips,\n        hideServices,\n    } = props\n    const specifications = useDeviceSpecifications({\n        includeExperimental: !buyNow,\n    })\n    const specs = useMemo(() => {\n        let r = (devices || specifications).slice(0)\n        if (ids?.length) r = r.filter(({ id }) => ids.indexOf(id) > -1)\n        if (company) {\n            const lc = escapeDeviceIdentifier(company)\n            r = r.filter(spec =>\n                escapeDeviceIdentifier(spec.company).startsWith(lc)\n            )\n        }\n        if (!isNaN(serviceClass))\n            r = r.filter(spec => spec.services?.indexOf(serviceClass) > -1)\n        if (serviceName) {\n            const si = serviceSpecificationFromName(serviceName)\n            if (si)\n                r = r.filter(\n                    spec => spec.services?.indexOf(si.classIdentifier) > -1\n                )\n        }\n        if (updates) r = r.filter(spec => spec.repo)\n        if (buyNow !== undefined)\n            r = r.filter(spec => !!spec.storeLink === buyNow)\n        if (hardwareDesign) r = r.filter(spec => spec.hardwareDesign)\n        if (connector === \"jacdac\")\n            r = r.filter(\n                spec =>\n                    spec.connector !== \"noConnector\" &&\n                    spec.connector !== \"grove\" &&\n                    spec.connector !== \"qwiic\"\n            )\n        else if (connector === \"grove\")\n            r = r.filter(\n                spec => spec.connector === \"grove\" || spec.connector === \"qwiic\"\n            )\n        else if (connector === \"none\")\n            r = r.filter(\n                spec =>\n                    spec.connector === \"noConnector\" ||\n                    spec.connector === \"edgeIndependent\"\n            )\n\n        if (firmwareSources) r = r.filter(spec => spec.firmwareSource)\n        if (ec30)\n            r = r.filter(\n                spec => isEC30(spec.shape) || spec.tags?.includes(\"ec30\")\n            )\n        if (shapes)\n            r = r.filter(spec => shapes.some(shape => shape === spec.shape))\n        if (typeof makeCode === \"string\")\n            r = r.filter(spec =>\n                spec.makeCodeRepo?.some(r => r.target === makeCode)\n            )\n        else if (makeCode !== undefined)\n            r = r.filter(spec => !!spec.makeCodeRepo?.length === makeCode)\n        if (transports?.length)\n            r = r.filter(spec => transports.indexOf(spec.transport?.type) > -1)\n        if (tags?.length)\n            r = r.filter(spec => tags.every(tag => spec.tags?.includes(tag)))\n        if (query)\n            r = r.filter(spec =>\n                [\n                    spec.name,\n                    spec.description,\n                    spec.company,\n                    ...(spec.productIdentifiers || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(p => p.toString(16)),\n                    ...(spec.services || []).map(srv => renderServiceName(srv)),\n                ].some(s => s?.toLowerCase()?.indexOf(query.toLowerCase()) > -1)\n            )\n        r = r.sort((a, b) => {\n            // kits first\n            let c =\n                -(a.tags?.indexOf(\"kit\") > -1 ? 1 : 0) +\n                (b.tags?.indexOf(\"kit\") > -1 ? 1 : 0)\n            if (c) return c\n            // device with transports\n            c = -(a.transport ? 1 : 0) + (b.transport ? 1 : 0)\n            if (c) return c\n            // use ec30 shape\n            c = -(isEC30(a.shape) ? 1 : 0) + (isEC30(b.shape) ? 1 : 0)\n            if (c) return c\n            // with connectors first\n            c =\n                -(a.connector === \"noConnector\" ||\n                a.connector === \"edgePassive\" ||\n                a.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0) +\n                (b.connector === \"noConnector\" ||\n                b.connector === \"edgePassive\" ||\n                b.connector === \"edgeIndependent\"\n                    ? 1\n                    : 0)\n            if (c) return c\n\n            // by order\n            c = (a.order || 50) - (b.order || 50)\n            if (c) return c\n            // by name\n            return a.name.localeCompare(b.name)\n        })\n        if (count !== undefined) r = r.slice(0, count)\n        return r\n    }, [\n        query,\n        serviceClass,\n        serviceName,\n        count,\n        company,\n        JSON.stringify(devices?.map(d => d.id)),\n        specifications,\n        updates,\n        buyNow,\n        makeCode,\n        hardwareDesign,\n        firmwareSources,\n        transports?.join(\",\"),\n        tags?.join(\",\"),\n        ec30,\n        connector,\n        shapes?.join(\",\"),\n        ids?.join(\",\"),\n    ])\n    const gridBreakpoints = useGridBreakpoints(specs.length)\n    const size = specs?.length < 6 ? \"catalog\" : \"preview\"\n\n    if (!specs.length) return null\n\n    return (\n        <Grid sx={sx} container spacing={3}>\n            {header && <GridHeader title={header} />}\n            {specs.map(specification => (\n                <Grid key={specification.id} item {...gridBreakpoints}>\n                    <DeviceSpecificationCard\n                        specification={specification}\n                        size={size}\n                        onClick={\n                            onDeviceClick\n                                ? () => onDeviceClick(specification)\n                                : undefined\n                        }\n                        hideChips={hideChips}\n                        hideServices={hideServices}\n                    />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n"],"names":["serviceNames","names","serviceName","serviceSpecificationFromName","spec","slug","title","description","services","name","imageUrl","useDeviceImage","uniqueMap","srv","sc","humanify","serviceSpecificationFromClassIdentifier","s","to","onClick","identifierToUrlPath","aspectRatio","width","specification","version","ml","makeCodeRepo","firmwareSource","hardwareDesign","specifications","useDeviceSpecifications","includeExperimental","specs","useMemo","r","devices","ids","lc","escapeDeviceIdentifier","isNaN","si","buyNow","connector","isEC30","shapes","shape","makeCode","transports","tags","tag","p","renderServiceName","query","c","a","b","count","JSON","d","gridBreakpoints","useGridBreakpoints","size","header","onDeviceClick"],"sourceRoot":""}